{
  "service": "ec2",
  "pro_support": true,
  "community_support": true,
  "operations": [
    {
      "AcceptAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptCapacityReservationBillingOwnership": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptReservedInstancesExchangeQuote": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptTransitGatewayVpcAttachment": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AcceptVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AdvertiseByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AllocateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AllocateHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AllocateIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ApplySecurityGroupsToClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssignIpv6Addresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssignPrivateIpAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssignPrivateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateCapacityReservationBillingOwner": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateEnclaveCertificateIamRole": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateIamInstanceProfile": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateIpamByoasn": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateRouteServer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AssociateSecurityGroupVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateSubnetCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateTrunkInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AssociateVpcCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AttachClassicLinkVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AttachInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AttachNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AttachVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AttachVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AttachVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AuthorizeClientVpnIngress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "AuthorizeSecurityGroupEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "AuthorizeSecurityGroupIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "BundleInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelBundleTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelCapacityReservationFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelConversionTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelDeclarativePoliciesReport": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelExportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelImageLaunchPermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelImportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelReservedInstancesListing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelSpotFleetRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CancelSpotInstanceRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ConfirmProductInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CopyFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CopyImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CopySnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCapacityReservationBySplitting": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCapacityReservationFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCarrierGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateClientVpnRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCoipPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateCustomerGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateDefaultSubnet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateDefaultVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateDelegateMacVolumeOwnershipTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateEgressOnlyInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateFleet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateImageUsageReport": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateInstanceConnectEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateInstanceExportTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateIpamExternalResourceVerificationToken": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateLaunchTemplateVersion": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateLocalGatewayRouteTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateLocalGatewayRouteTableVpcAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateLocalGatewayVirtualInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateLocalGatewayVirtualInterfaceGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateMacSystemIntegrityProtectionModificationTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateNatGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateNetworkAcl": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateNetworkInsightsAccessScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateNetworkInsightsPath": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateNetworkInterfacePermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreatePlacementGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreatePublicIpv4Pool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateReplaceRootVolumeTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateReservedInstancesListing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateRestoreImageTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateRouteServer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateRouteServerEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateRouteServerPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateSecurityGroup": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateSnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateSnapshots": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateSpotDatafeedSubscription": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateStoreImageTask": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateSubnet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateSubnetCidrReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateTrafficMirrorFilter": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTrafficMirrorTarget": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateTransitGatewayConnect": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayConnectPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayRouteTableAnnouncement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVpcBlockPublicAccessExclusion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVpcEndpoint": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVpcEndpointConnectionNotification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVpcEndpointServiceConfiguration": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateVpnConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVpnConnectionRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreateVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteCarrierGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteClientVpnRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteCoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteCoipPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteCustomerGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteEgressOnlyInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteFleets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteFpgaImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteImageUsageReport": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteInstanceConnectEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteIpamExternalResourceVerificationToken": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteLaunchTemplateVersions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayRouteTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayRouteTableVirtualInterfaceGroupAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayRouteTableVpcAssociation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayVirtualInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteLocalGatewayVirtualInterfaceGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteNatGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteNetworkAcl": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteNetworkInsightsAccessScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteNetworkInsightsAccessScopeAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteNetworkInsightsAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteNetworkInsightsPath": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteNetworkInterfacePermission": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeletePlacementGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeletePublicIpv4Pool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteQueuedReservedInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteRouteServer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteRouteServerEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteRouteServerPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteSecurityGroup": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteSnapshot": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteSpotDatafeedSubscription": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteSubnet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteSubnetCidrReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTrafficMirrorFilter": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTrafficMirrorTarget": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteTransitGatewayConnect": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayConnectPeer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayRouteTableAnnouncement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteVpcBlockPublicAccessExclusion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVpcEndpointConnectionNotifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVpcEndpointServiceConfigurations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteVpcEndpoints": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteVpnConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVpnConnectionRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeleteVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeprovisionByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeprovisionIpamByoasn": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeprovisionIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeprovisionPublicIpv4PoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeregisterImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeregisterInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeregisterTransitGatewayMulticastGroupMembers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeregisterTransitGatewayMulticastGroupSources": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAccountAttributes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAddressTransfers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAddressesAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAggregateIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeAvailabilityZones": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeAwsNetworkPerformanceMetricSubscriptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeBundleTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeByoipCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityBlockExtensionHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityBlockExtensionOfferings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityBlockOfferings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityBlockStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityBlocks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityReservationBillingRequests": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityReservationFleets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCapacityReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCarrierGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClassicLinkInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClientVpnAuthorizationRules": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClientVpnConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClientVpnEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClientVpnRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeClientVpnTargetNetworks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCoipPools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeConversionTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeCustomerGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeDeclarativePoliciesReports": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeDhcpOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeEgressOnlyInternetGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeElasticGpus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeExportImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeExportTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFastLaunchImages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFleetHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFleetInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFleets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFlowLogs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeFpgaImages": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeHostReservationOfferings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeHostReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIamInstanceProfileAssociations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIdentityIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImageReferences": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImageUsageReportEntries": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImageUsageReports": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImages": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeImportImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeImportSnapshotTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceConnectEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceCreditSpecifications": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceEventWindows": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceImageMetadata": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceStatus": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceTopology": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceTypeOfferings": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstanceTypes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeInternetGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeIpamByoasn": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpamExternalResourceVerificationTokens": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpamPools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpamResourceDiscoveries": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpamResourceDiscoveryAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpamScopes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpams": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeIpv6Pools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeKeyPairs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeLaunchTemplateVersions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLaunchTemplates": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeLocalGatewayRouteTableVirtualInterfaceGroupAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLocalGatewayRouteTableVpcAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLocalGatewayRouteTables": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLocalGatewayVirtualInterfaceGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLocalGatewayVirtualInterfaces": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLocalGateways": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeLockedSnapshots": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeMacHosts": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeMacModificationTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeManagedPrefixLists": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeMovingAddresses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNatGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeNetworkAcls": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeNetworkInsightsAccessScopeAnalyses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInsightsAccessScopes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInsightsAnalyses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInsightsPaths": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInterfacePermissions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeNetworkInterfaces": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeOutpostLags": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribePlacementGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribePrefixLists": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribePrincipalIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribePublicIpv4Pools": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeRegions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeReplaceRootVolumeTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeReservedInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeReservedInstancesListings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeReservedInstancesModifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeReservedInstancesOfferings": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeRouteServerEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeRouteServerPeers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeRouteServers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeRouteTables": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeScheduledInstanceAvailability": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSecurityGroupReferences": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSecurityGroupRules": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeSecurityGroupVpcAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSecurityGroups": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeServiceLinkVirtualInterfaces": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSnapshotTierStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSnapshots": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotDatafeedSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotFleetInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotFleetRequestHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotFleetRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotInstanceRequests": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSpotPriceHistory": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeStaleSecurityGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeStoreImageTasks": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeSubnets": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeTags": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTrafficMirrorFilterRules": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTrafficMirrorFilters": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTrafficMirrorSessions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTrafficMirrorTargets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeTransitGatewayConnectPeers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayConnects": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayMulticastDomains": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayPeeringAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayPolicyTables": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayRouteTableAnnouncements": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayRouteTables": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGatewayVpcAttachments": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeTransitGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeTrunkInterfaceAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVerifiedAccessEndpoints": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVerifiedAccessGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVerifiedAccessInstanceLoggingConfigurations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVerifiedAccessInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVerifiedAccessTrustProviders": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVolumeAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVolumeStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVolumes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVolumesModifications": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeVpcBlockPublicAccessExclusions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcBlockPublicAccessOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpointAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpointConnectionNotifications": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpointServiceConfigurations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeVpcEndpointServicePermissions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpointServices": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpcEndpoints": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeVpcPeeringConnections": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeVpcs": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DescribeVpnConnections": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DescribeVpnGateways": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DetachClassicLinkVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DetachInternetGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DetachNetworkInterface": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DetachVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DetachVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DetachVpnGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DisableAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableAllowedImagesSettings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableAwsNetworkPerformanceMetricSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableFastLaunch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableImageBlockPublicAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableImageDeprecation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableImageDeregistrationProtection": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableIpamOrganizationAdminAccount": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableRouteServerPropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableSerialConsoleAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableSnapshotBlockPublicAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableTransitGatewayRouteTablePropagation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableVgwRoutePropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisableVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateCapacityReservationBillingOwner": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateClientVpnTargetNetwork": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateEnclaveCertificateIamRole": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateIamInstanceProfile": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateIpamByoasn": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateRouteServer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DisassociateSecurityGroupVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateSubnetCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateTransitGatewayMulticastDomain": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateTransitGatewayPolicyTable": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateTransitGatewayRouteTable": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateTrunkInterface": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DisassociateVpcCidrBlock": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "EnableAddressTransfer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableAllowedImagesSettings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableAwsNetworkPerformanceMetricSubscription": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableFastLaunch": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableFastSnapshotRestores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableImageBlockPublicAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableImageDeprecation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableImageDeregistrationProtection": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableIpamOrganizationAdminAccount": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableReachabilityAnalyzerOrganizationSharing": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableRouteServerPropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableSerialConsoleAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableSnapshotBlockPublicAccess": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableTransitGatewayRouteTablePropagation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableVgwRoutePropagation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableVolumeIO": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableVpcClassicLink": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "EnableVpcClassicLinkDnsSupport": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ExportClientVpnClientCertificateRevocationList": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ExportClientVpnClientConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ExportImage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ExportTransitGatewayRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ExportVerifiedAccessInstanceClientConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetActiveVpnTunnelStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetAllowedImagesSettings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetAssociatedEnclaveCertificateIamRoles": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetAssociatedIpv6PoolCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetAwsNetworkPerformanceData": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetCapacityReservationUsage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetCoipPoolUsage": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetConsoleOutput": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetConsoleScreenshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetDeclarativePoliciesReportSummary": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetDefaultCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetEbsDefaultKmsKeyId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetEbsEncryptionByDefault": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetFlowLogsIntegrationTemplate": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetGroupsForCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetHostReservationPurchasePreview": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetImageBlockPublicAccessState": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetInstanceMetadataDefaults": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetInstanceTpmEkPub": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetInstanceTypesFromInstanceRequirements": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetInstanceUefiData": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamAddressHistory": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamDiscoveredAccounts": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamDiscoveredPublicAddresses": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamDiscoveredResourceCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamPoolAllocations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamPoolCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetIpamResourceCidrs": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetLaunchTemplateData": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetManagedPrefixListAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetManagedPrefixListEntries": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetNetworkInsightsAccessScopeAnalysisFindings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetNetworkInsightsAccessScopeContent": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetPasswordData": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetReservedInstancesExchangeQuote": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetRouteServerAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetRouteServerPropagations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetRouteServerRoutingDatabase": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetSecurityGroupsForVpc": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "GetSerialConsoleAccessStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetSnapshotBlockPublicAccessState": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetSpotPlacementScores": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetSubnetCidrReservations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayAttachmentPropagations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayPolicyTableAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayPolicyTableEntries": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayPrefixListReferences": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayRouteTableAssociations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetTransitGatewayRouteTablePropagations": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVerifiedAccessEndpointPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVerifiedAccessEndpointTargets": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVerifiedAccessGroupPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVpnConnectionDeviceSampleConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVpnConnectionDeviceTypes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetVpnTunnelReplacementStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ImportClientVpnClientCertificateRevocationList": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ImportImage": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ImportInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ImportKeyPair": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ImportSnapshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ImportVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ListImagesInRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ListSnapshotsInRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "LockSnapshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyAddressAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyAvailabilityZoneGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyCapacityReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyCapacityReservationFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyClientVpnEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyDefaultCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyEbsDefaultKmsKeyId": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyFleet": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIdentityIdFormat": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceCapacityReservationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceConnectEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceCpuOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceCreditSpecification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceEventStartTime": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceEventWindow": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceMaintenanceOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceMetadataDefaults": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceMetadataOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstanceNetworkPerformanceOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyInstancePlacement": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIpamPool": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIpamResourceCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIpamResourceDiscovery": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyIpamScope": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyLaunchTemplate": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ModifyLocalGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyManagedPrefixList": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyPrivateDnsNameOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyPublicIpDnsNameOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyReservedInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyRouteServer": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifySecurityGroupRules": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifySnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifySnapshotTier": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifySpotFleetRequest": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifySubnetAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ModifyTrafficMirrorFilterNetworkServices": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyTrafficMirrorFilterRule": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyTrafficMirrorSession": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyTransitGateway": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyTransitGatewayPrefixListReference": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyTransitGatewayVpcAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessEndpoint": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessEndpointPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessGroup": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessGroupPolicy": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessInstance": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessInstanceLoggingConfiguration": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVerifiedAccessTrustProvider": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVolume": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVolumeAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ModifyVpcBlockPublicAccessExclusion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcBlockPublicAccessOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcEndpoint": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcEndpointConnectionNotification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcEndpointServiceConfiguration": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcEndpointServicePayerResponsibility": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcEndpointServicePermissions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcPeeringConnectionOptions": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpcTenancy": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpnConnection": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpnConnectionOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpnTunnelCertificate": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ModifyVpnTunnelOptions": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "MonitorInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "MoveAddressToVpc": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "MoveByoipCidrToIpam": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "MoveCapacityReservationInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ProvisionByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ProvisionIpamByoasn": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ProvisionIpamPoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ProvisionPublicIpv4PoolCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "PurchaseCapacityBlock": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "PurchaseCapacityBlockExtension": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "PurchaseHostReservation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "PurchaseReservedInstancesOffering": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "PurchaseScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RebootInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RegisterImage": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RegisterInstanceEventNotificationAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RegisterTransitGatewayMulticastGroupMembers": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RegisterTransitGatewayMulticastGroupSources": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectCapacityReservationBillingOwnership": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectTransitGatewayMulticastDomainAssociations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectTransitGatewayPeeringAttachment": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectTransitGatewayVpcAttachment": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectVpcEndpointConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RejectVpcPeeringConnection": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReleaseAddress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ReleaseHosts": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReleaseIpamPoolAllocation": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceIamInstanceProfileAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceImageCriteriaInAllowedImagesSettings": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceNetworkAclAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceNetworkAclEntry": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceRoute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceRouteTableAssociation": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceTransitGatewayRoute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReplaceVpnTunnel": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ReportInstanceStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RequestSpotFleet": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RequestSpotInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetAddressAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetEbsDefaultKmsKeyId": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetFpgaImageAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetImageAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetInstanceAttribute": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetNetworkInterfaceAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ResetSnapshotAttribute": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RestoreAddressToClassic": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RestoreImageFromRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RestoreManagedPrefixListVersion": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RestoreSnapshotFromRecycleBin": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RestoreSnapshotTier": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RevokeClientVpnIngress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RevokeSecurityGroupEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "RevokeSecurityGroupIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "RunInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "RunScheduledInstances": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "SearchLocalGatewayRoutes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "SearchTransitGatewayMulticastGroups": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "SearchTransitGatewayRoutes": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "SendDiagnosticInterrupt": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "StartDeclarativePoliciesReport": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "StartInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "StartNetworkInsightsAccessScopeAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "StartNetworkInsightsAnalysis": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "StartVpcEndpointServicePrivateDnsVerification": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "StopInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "TerminateClientVpnConnections": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "TerminateInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "UnassignIpv6Addresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UnassignPrivateIpAddresses": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UnassignPrivateNatGatewayAddress": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UnlockSnapshot": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UnmonitorInstances": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateSecurityGroupRuleDescriptionsEgress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateSecurityGroupRuleDescriptionsIngress": {
        "implemented": true,
        "availability": "community",
        "internal_test_suite": false,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "WithdrawByoipCidr": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    }
  ],
  "details": {
    "AcceptVpcPeeringConnection": {
      "VpcPeeringConnectionId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "AllocateAddress": {
      "Domain": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "AssociateRouteTable": {
      "RouteTableId, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "AssociateVpcCidrBlock": {
      "AmazonProvidedIpv6CidrBlock, CidrBlock, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "AmazonProvidedIpv6CidrBlock, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "AttachInternetGateway": {
      "InternetGatewayId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "AttachVpnGateway": {
      "VpcId, VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "AuthorizeSecurityGroupEgress": {
      "CidrIp, FromPort, GroupId, IpProtocol, ToPort": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "GroupId, IpPermissions": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "AuthorizeSecurityGroupIngress": {
      "CidrIp, FromPort, GroupId, IpProtocol, ToPort": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "GroupId, IpPermissions": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source",
            "test": "test_rds_data_source",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventRdsDatasource::test_rds_simple",
            "test": "test_rds_simple",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_list_security_groups",
            "test": "test_list_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group",
            "test": "test_read_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_with_tags",
            "test": "test_read_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_custom_origin_config_http_port_elb_integration",
            "test": "test_custom_origin_config_http_port_elb_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[0]",
            "test": "test_invalid_k8s_versions[0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[1.60]",
            "test": "test_invalid_k8s_versions[1.60]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[100.1]",
            "test": "test_invalid_k8s_versions[100.1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[test]",
            "test": "test_invalid_k8s_versions[test]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_entry_lifecycle[iam_role]",
            "test": "test_access_entry_lifecycle[iam_role]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_ecr_eks_integration",
            "test": "test_ecr_eks_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_elb_direct_connection_to_pod",
            "test": "test_elb_direct_connection_to_pod",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_nlb_modify_attributes",
            "test": "test_nlb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'dns_record.client_routing_policy'\", \"$.._AttributesDict.'zonal_shift.config.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions0]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions1]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions2]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions3]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions4]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions5]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions6]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions6]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions7]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions8]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_load_balancer",
            "test": "test_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_capacity_reservation",
            "test": "test_describe_capacity_reservation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_listener_attributes",
            "test": "test_describe_listener_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_load_balancers",
            "test": "test_describe_load_balancers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..LoadBalancers..State.Code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_non_existent_listener",
            "test": "test_describe_non_existent_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_failing_create_load_balancer",
            "test": "test_failing_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions0-modify_conditions0]",
            "test": "test_modify_rule[create_conditions0-modify_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions1-modify_conditions1]",
            "test": "test_modify_rule[create_conditions1-modify_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions2-modify_conditions2]",
            "test": "test_modify_rule[create_conditions2-modify_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions3-modify_conditions3]",
            "test": "test_modify_rule[create_conditions3-modify_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_set_rule_priorities",
            "test": "test_set_rule_priorities",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-4566]",
            "test": "test_route53_elb_integration[port-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-80]",
            "test": "test_route53_elb_integration[port-80]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-database-name]",
            "test": "test_create_postgres[default-database-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-username]",
            "test": "test_create_postgres[default-username]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[no-special-values]",
            "test": "test_create_postgres[no-special-values]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_grant_rds_iam_query_with_quote",
            "test": "test_grant_rds_iam_query_with_quote",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_with_existing_vpc_security_group",
            "test": "test_create_db_instance_with_existing_vpc_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateDefaultSubnet": {
      "AvailabilityZone": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateDefaultVpc": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateDhcpOptions": {
      "DhcpConfigurations, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_dhcp_options",
            "test": "test_dhcp_options",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..OwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateFlowLogs": {
      "LogDestination, LogDestinationType, LogGroupName, ResourceIds, ResourceType, TrafficType": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "LogDestination, LogDestinationType, ResourceIds, ResourceType, TrafficType": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3",
            "test": "test_ec2_flow_logs_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "LogDestinationType, LogGroupName, ResourceIds, ResourceType, TrafficType": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "LogDestinationType, ResourceIds, ResourceType, TrafficType": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateInternetGateway": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateKeyPair": {
      "KeyFormat, KeyName, KeyType": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_keypair_create_import",
            "test": "test_keypair_create_import",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ImportedKeyPairFingerprint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "KeyName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_instance_with_key_pair",
            "test": "test_deploy_instance_with_key_pair",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..KeyPairs..KeyType', '$..KeyPairs..Tags', '$..Error..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/integration/test_stores.py::test_nonstandard_regions",
            "test": "test_nonstandard_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateLaunchTemplate": {
      "ClientToken, LaunchTemplateData, LaunchTemplateName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_invalid_launch_template_name",
            "test": "test_raise_invalid_launch_template_name",
            "response": "400",
            "error": "InvalidLaunchTemplateNameError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_when_launch_template_data_missing",
            "test": "test_raise_when_launch_template_data_missing",
            "response": "400",
            "error": "MissingParameterError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_create_nodegroup_with_tags",
            "test": "test_create_nodegroup_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..releaseVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateLaunchTemplateVersion": {
      "ClientToken, LaunchTemplateData, LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, LaunchTemplateData, LaunchTemplateName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateManagedPrefixList": {
      "AddressFamily, ClientToken, Entries, MaxEntries, PrefixListName, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_prefix_list",
            "test": "test_deploy_prefix_list",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateNatGateway": {
      "AllocationId, ClientToken, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateNetworkAcl": {
      "ClientToken, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "ClientToken, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNetworkAclEntry": {
      "CidrBlock, Egress, NetworkAclId, Protocol, RuleAction, RuleNumber": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateNetworkInterface": {
      "ClientToken, Description, Groups, PrivateIpAddress, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "ClientToken, Description, PrivateIpAddress, SubnetId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/applicationautoscaling/test_application_autoscaling.py::TestAppAutoscaling::test_ecs_register_scalable_target",
            "test": "test_ecs_register_scalable_target",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ScalableTargetARN', '$..ScalableTargets..RoleARN', '$..ScalableTargets..SuspendedState']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_tag_task",
            "test": "test_tag_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_nonexistent_secrets",
            "test": "test_create_task_with_nonexistent_secrets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..attachments', '$..group', '$..managedAgents', '$..networkInterfaces', '$..overrides', '$..stoppedReason', '$..enableExecuteCommand', '$..startedBy', '$..runtimeId', '$..executionStoppedAt', '$..fargateEphemeralStorage', '$..networkBindings', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[False-]",
            "test": "test_create_task_with_secrets[False-]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[True-/test/]",
            "test": "test_create_task_with_secrets[True-/test/]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[True-]",
            "test": "test_create_task_with_secrets[True-]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_ecs_task_overrides",
            "test": "test_ecs_task_overrides",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_environment_variable_expansion",
            "test": "test_environment_variable_expansion",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cpu', '$..memory', '$..registeredBy', '$..requiresAttributes', '$..containerDefinitions..systemControls', '$.environment.AWS_ACCESS_KEY_ID', '$.environment.AWS_ENDPOINT_URL', '$.environment.AWS_SECRET_ACCESS_KEY', '$.environment.LOCALSTACK_HOSTNAME', '$.environment.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI', '$.environment.ECS_AGENT_URI', '$.environment.ECS_CONTAINER_METADATA_URI', '$.environment.ECS_CONTAINER_METADATA_URI_V4', '$.environment.HOSTNAME']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_failed_tasks_log_to_cloudwatch",
            "test": "test_failed_tasks_log_to_cloudwatch",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_firelens_config_from_s3",
            "test": "test_firelens_config_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_get_aws_execution_env_from_task[FARGATE]",
            "test": "test_get_aws_execution_env_from_task[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[False-False]",
            "test": "test_read_from_json_secret[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[False-True]",
            "test": "test_read_from_json_secret[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[True-False]",
            "test": "test_read_from_json_secret[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task[16GB-2 vCPU-8192]",
            "test": "test_run_simple_task[16GB-2 vCPU-8192]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task[1GB-0.5 vCPU-256]",
            "test": "test_run_simple_task[1GB-0.5 vCPU-256]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task_ec2[16GB-2 vCPU-8192]",
            "test": "test_run_simple_task_ec2[16GB-2 vCPU-8192]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task_ec2[1GB-0.5 vCPU-256]",
            "test": "test_run_simple_task_ec2[1GB-0.5 vCPU-256]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_in_cluster_with_large_name",
            "test": "test_run_task_in_cluster_with_large_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_non_default_region",
            "test": "test_run_task_non_default_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_task_generates_logs_live",
            "test": "test_task_generates_logs_live",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTasksCrud::test_list_tasks_with_cluster_and_service",
            "test": "test_list_tasks_with_cluster_and_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateRoute": {
      "DestinationCidrBlock, DestinationIpv6CidrBlock, RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "DestinationCidrBlock, GatewayId, RouteTableId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "DestinationCidrBlock, NatGatewayId, RouteTableId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateRouteTable": {
      "ClientToken, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "ClientToken, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateSecurityGroup": {
      "Description, GroupName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-id_manager]",
            "test": "test_create_security_group_with_custom_id[True-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-id_manager]",
            "test": "test_create_security_group_with_custom_id[True-id_manager]",
            "response": "400",
            "error": "InvalidSecurityGroupDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_list_security_groups",
            "test": "test_list_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group",
            "test": "test_read_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_with_tags",
            "test": "test_read_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Description, GroupName, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_security_group_with_tags",
            "test": "test_deploy_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-tag]",
            "test": "test_create_security_group_with_custom_id[True-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-tag]",
            "test": "test_create_security_group_with_custom_id[True-tag]",
            "response": "400",
            "error": "InvalidSecurityGroupDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Description, GroupName, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "400",
            "error": "InvalidSecurityGroupDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[0]",
            "test": "test_invalid_k8s_versions[0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[1.60]",
            "test": "test_invalid_k8s_versions[1.60]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[100.1]",
            "test": "test_invalid_k8s_versions[100.1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[test]",
            "test": "test_invalid_k8s_versions[test]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_entry_lifecycle[iam_role]",
            "test": "test_access_entry_lifecycle[iam_role]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_ecr_eks_integration",
            "test": "test_ecr_eks_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "Description, GroupName, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "400",
            "error": "InvalidSecurityGroupDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_custom_origin_config_http_port_elb_integration",
            "test": "test_custom_origin_config_http_port_elb_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_elb_direct_connection_to_pod",
            "test": "test_elb_direct_connection_to_pod",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_nlb_modify_attributes",
            "test": "test_nlb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'dns_record.client_routing_policy'\", \"$.._AttributesDict.'zonal_shift.config.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions0]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions1]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions2]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions3]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions4]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions5]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions6]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions6]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions7]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions8]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_load_balancer",
            "test": "test_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_capacity_reservation",
            "test": "test_describe_capacity_reservation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_listener_attributes",
            "test": "test_describe_listener_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_load_balancers",
            "test": "test_describe_load_balancers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..LoadBalancers..State.Code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_non_existent_listener",
            "test": "test_describe_non_existent_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_failing_create_load_balancer",
            "test": "test_failing_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions0-modify_conditions0]",
            "test": "test_modify_rule[create_conditions0-modify_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions1-modify_conditions1]",
            "test": "test_modify_rule[create_conditions1-modify_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions2-modify_conditions2]",
            "test": "test_modify_rule[create_conditions2-modify_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions3-modify_conditions3]",
            "test": "test_modify_rule[create_conditions3-modify_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_set_rule_priorities",
            "test": "test_set_rule_priorities",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-4566]",
            "test": "test_route53_elb_integration[port-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-80]",
            "test": "test_route53_elb_integration[port-80]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_with_existing_vpc_security_group",
            "test": "test_create_db_instance_with_existing_vpc_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateSubnet": {
      "AvailabilityZone, AvailabilityZoneId, CidrBlock, Ipv6Native, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "AvailabilityZone, CidrBlock, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "AvailabilityZone, CidrBlock, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_list_vpc",
            "test": "test_list_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_route53/test_route53_hostedzone.py::test_read_hosted_zone_private",
            "test": "test_read_hosted_zone_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache.py::TestElastiCache::test_cache_subnet_group_crud",
            "test": "test_cache_subnet_group_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CacheSubnetGroup.Subnets', '$..CacheSubnetGroup.SupportedNetworkTypes', '$..CacheSubnetGroup.VpcId', '$..Error.Message', '$..Subnets', '$..SupportedNetworkTypes', '$..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[invalid]",
            "test": "test_create_cluster_invalid_instance[invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[nonexistent]",
            "test": "test_create_cluster_invalid_instance[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[nonexistent]",
            "test": "test_create_cluster_invalid_kafka_version[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[unsupported]",
            "test": "test_create_cluster_invalid_kafka_version[unsupported]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "test": "test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group",
            "test": "test_create_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_already_exists",
            "test": "test_create_db_subnet_group_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_duplicate_subnet",
            "test": "test_create_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_casing",
            "test": "test_db_subnet_group_casing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_tagging",
            "test": "test_db_subnet_group_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_delete_db_subnet_group",
            "test": "test_delete_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_describe_db_subnet_groups",
            "test": "test_describe_db_subnet_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group",
            "test": "test_modify_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_duplicate_subnet",
            "test": "test_modify_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_empty_desc",
            "test": "test_modify_db_subnet_group_empty_desc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/route53/test_route53_replication.py::TestHostedZoneReplication::test_replication_private_zone",
            "test": "test_replication_private_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, TagSpecifications, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id",
            "test": "test_create_subnet_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id_and_vpc_id",
            "test": "test_create_subnet_with_custom_id_and_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_tags",
            "test": "test_create_subnet_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id",
            "test": "test_create_subnet_with_custom_id",
            "response": "400",
            "error": "InvalidSubnetDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_non_default_region",
            "test": "test_run_task_non_default_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateTags": {
      "Resources, Tags": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PaginationToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_with_tags",
            "test": "test_read_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateTransitGateway": {
      "Description, Options, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateTransitGatewayVpcAttachment": {
      "SubnetIds, TagSpecifications, TransitGatewayId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateVolume": {
      "AvailabilityZone, ClientToken": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_create_volume_without_size",
            "test": "test_raise_create_volume_without_size",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpc": {
      "AmazonProvidedIpv6CidrBlock, CidrBlock, TagSpecifications": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CidrBlock": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3",
            "test": "test_ec2_flow_logs_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id",
            "test": "test_create_subnet_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_create_specific_vpc_id",
            "test": "test_create_specific_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PaginationToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_associate_vpc_with_hosted_zone",
            "test": "test_associate_vpc_with_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_create_private_hosted_zone",
            "test": "test_create_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HostedZone.CallerReference', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_non_default_region",
            "test": "test_run_task_non_default_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CidrBlock, InstanceTenancy": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "CidrBlock, InstanceTenancy, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "CidrBlock, TagSpecifications": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id_and_vpc_id",
            "test": "test_create_subnet_with_custom_id_and_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_tags",
            "test": "test_create_subnet_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_with_custom_id",
            "test": "test_create_vpc_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_with_custom_id",
            "test": "test_create_vpc_with_custom_id",
            "response": "400",
            "error": "InvalidVpcDuplicateCustomIdError",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_list_vpc",
            "test": "test_list_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_route53/test_route53_hostedzone.py::test_read_hosted_zone_private",
            "test": "test_read_hosted_zone_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache.py::TestElastiCache::test_cache_subnet_group_crud",
            "test": "test_cache_subnet_group_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CacheSubnetGroup.Subnets', '$..CacheSubnetGroup.SupportedNetworkTypes', '$..CacheSubnetGroup.VpcId', '$..Error.Message', '$..Subnets', '$..SupportedNetworkTypes', '$..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[invalid]",
            "test": "test_create_cluster_invalid_instance[invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[nonexistent]",
            "test": "test_create_cluster_invalid_instance[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[nonexistent]",
            "test": "test_create_cluster_invalid_kafka_version[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[unsupported]",
            "test": "test_create_cluster_invalid_kafka_version[unsupported]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "test": "test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group",
            "test": "test_create_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_already_exists",
            "test": "test_create_db_subnet_group_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_duplicate_subnet",
            "test": "test_create_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_casing",
            "test": "test_db_subnet_group_casing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_tagging",
            "test": "test_db_subnet_group_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_delete_db_subnet_group",
            "test": "test_delete_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_describe_db_subnet_groups",
            "test": "test_describe_db_subnet_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group",
            "test": "test_modify_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_duplicate_subnet",
            "test": "test_modify_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_empty_desc",
            "test": "test_modify_db_subnet_group_empty_desc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/route53/test_route53_replication.py::TestHostedZoneReplication::test_replication_private_zone",
            "test": "test_replication_private_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpcEndpoint": {
      "PolicyDocument, RouteTableIds, ServiceName, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "PrivateDnsEnabled, SecurityGroupIds, ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "PrivateDnsEnabled, ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "RouteTableIds, ServiceName, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "RouteTableIds, ServiceName, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "SecurityGroupIds, ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "ServiceName, SubnetIds, VpcEndpointType, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ServiceName, VpcEndpointType, VpcId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateVpcEndpointServiceConfiguration": {
      "NetworkLoadBalancerArns": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "CreateVpcPeeringConnection": {
      "PeerRegion, PeerVpcId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateVpnGateway": {
      "AvailabilityZone, Type": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteDhcpOptions": {
      "DhcpOptionsId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_dhcp_options",
            "test": "test_dhcp_options",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..OwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteFlowLogs": {
      "FlowLogIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3",
            "test": "test_ec2_flow_logs_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteInternetGateway": {
      "InternetGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteKeyPair": {
      "KeyName": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_instance_with_key_pair",
            "test": "test_deploy_instance_with_key_pair",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..KeyPairs..KeyType', '$..KeyPairs..Tags', '$..Error..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_keypair_create_import",
            "test": "test_keypair_create_import",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ImportedKeyPairFingerprint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[alpine-3.20]",
            "test": "test_ssh_key_pairs[alpine-3.20]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2023]",
            "test": "test_ssh_key_pairs[amazonlinux-2023]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2]",
            "test": "test_ssh_key_pairs[amazonlinux-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[ubuntu-22.04]",
            "test": "test_ssh_key_pairs[ubuntu-22.04]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteLaunchTemplate": {
      "LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_duplicate_launch_template_name",
            "test": "test_raise_duplicate_launch_template_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addon_errors",
            "test": "test_cluster_addon_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "LaunchTemplateName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_create_nodegroup_with_tags",
            "test": "test_create_nodegroup_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..releaseVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteManagedPrefixList": {
      "PrefixListId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_prefix_list",
            "test": "test_deploy_prefix_list",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteNatGateway": {
      "NatGatewayId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteNetworkAcl": {
      "NetworkAclId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteNetworkInterface": {
      "NetworkInterfaceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteRoute": {
      "DestinationCidrBlock, DestinationIpv6CidrBlock, RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteRouteTable": {
      "RouteTableId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteSecurityGroup": {
      "GroupId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_security_group_with_tags",
            "test": "test_deploy_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-id_manager]",
            "test": "test_create_security_group_with_custom_id[True-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-tag]",
            "test": "test_create_security_group_with_custom_id[True-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_list_security_groups",
            "test": "test_list_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group",
            "test": "test_read_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_with_tags",
            "test": "test_read_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_custom_origin_config_http_port_elb_integration",
            "test": "test_custom_origin_config_http_port_elb_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_policy_errors",
            "test": "test_access_policy_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addon_errors",
            "test": "test_cluster_addon_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_elb_direct_connection_to_pod",
            "test": "test_elb_direct_connection_to_pod",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_pull_public_s3_image_with_transparent_endpoint_injection",
            "test": "test_pull_public_s3_image_with_transparent_endpoint_injection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_nlb_modify_attributes",
            "test": "test_nlb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'dns_record.client_routing_policy'\", \"$.._AttributesDict.'zonal_shift.config.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions0]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions1]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions2]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions3]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions4]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions5]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions6]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions6]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions7]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions8]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_load_balancer",
            "test": "test_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_capacity_reservation",
            "test": "test_describe_capacity_reservation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_listener_attributes",
            "test": "test_describe_listener_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_load_balancers",
            "test": "test_describe_load_balancers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..LoadBalancers..State.Code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_non_existent_listener",
            "test": "test_describe_non_existent_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_failing_create_load_balancer",
            "test": "test_failing_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions0-modify_conditions0]",
            "test": "test_modify_rule[create_conditions0-modify_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions1-modify_conditions1]",
            "test": "test_modify_rule[create_conditions1-modify_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions2-modify_conditions2]",
            "test": "test_modify_rule[create_conditions2-modify_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions3-modify_conditions3]",
            "test": "test_modify_rule[create_conditions3-modify_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_set_rule_priorities",
            "test": "test_set_rule_priorities",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-4566]",
            "test": "test_route53_elb_integration[port-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-80]",
            "test": "test_route53_elb_integration[port-80]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_with_existing_vpc_security_group",
            "test": "test_create_db_instance_with_existing_vpc_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteSubnet": {
      "SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id_and_vpc_id",
            "test": "test_create_subnet_with_custom_id_and_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_list_vpc",
            "test": "test_list_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_route53/test_route53_hostedzone.py::test_read_hosted_zone_private",
            "test": "test_read_hosted_zone_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_non_default_region",
            "test": "test_run_task_non_default_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache.py::TestElastiCache::test_cache_subnet_group_crud",
            "test": "test_cache_subnet_group_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CacheSubnetGroup.Subnets', '$..CacheSubnetGroup.SupportedNetworkTypes', '$..CacheSubnetGroup.VpcId', '$..Error.Message', '$..Subnets', '$..SupportedNetworkTypes', '$..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[invalid]",
            "test": "test_create_cluster_invalid_instance[invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[nonexistent]",
            "test": "test_create_cluster_invalid_instance[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[nonexistent]",
            "test": "test_create_cluster_invalid_kafka_version[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[unsupported]",
            "test": "test_create_cluster_invalid_kafka_version[unsupported]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "test": "test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group",
            "test": "test_create_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_already_exists",
            "test": "test_create_db_subnet_group_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_duplicate_subnet",
            "test": "test_create_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_casing",
            "test": "test_db_subnet_group_casing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_tagging",
            "test": "test_db_subnet_group_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_delete_db_subnet_group",
            "test": "test_delete_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_describe_db_subnet_groups",
            "test": "test_describe_db_subnet_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group",
            "test": "test_modify_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_duplicate_subnet",
            "test": "test_modify_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_empty_desc",
            "test": "test_modify_db_subnet_group_empty_desc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/route53/test_route53_replication.py::TestHostedZoneReplication::test_replication_private_zone",
            "test": "test_replication_private_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteTransitGateway": {
      "TransitGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "500",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteTransitGatewayVpcAttachment": {
      "TransitGatewayAttachmentId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteVpc": {
      "VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3",
            "test": "test_ec2_flow_logs_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3_validation",
            "test": "test_ec2_flow_logs_s3_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_with_custom_id",
            "test": "test_create_vpc_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_create_specific_vpc_id",
            "test": "test_create_specific_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/resourcegroupstaggingapi/test_rgsa.py::TestRGSAIntegrations::test_get_resources",
            "test": "test_get_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PaginationToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_associate_vpc_with_hosted_zone",
            "test": "test_associate_vpc_with_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_create_private_hosted_zone",
            "test": "test_create_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HostedZone.CallerReference', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id",
            "test": "test_create_subnet_with_custom_id",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id_and_vpc_id",
            "test": "test_create_subnet_with_custom_id_and_vpc_id",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_tags",
            "test": "test_create_subnet_with_tags",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_list_vpc",
            "test": "test_list_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_route53/test_route53_hostedzone.py::test_read_hosted_zone_private",
            "test": "test_read_hosted_zone_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache.py::TestElastiCache::test_cache_subnet_group_crud",
            "test": "test_cache_subnet_group_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CacheSubnetGroup.Subnets', '$..CacheSubnetGroup.SupportedNetworkTypes', '$..CacheSubnetGroup.VpcId', '$..Error.Message', '$..Subnets', '$..SupportedNetworkTypes', '$..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[invalid]",
            "test": "test_create_cluster_invalid_instance[invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[nonexistent]",
            "test": "test_create_cluster_invalid_instance[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[nonexistent]",
            "test": "test_create_cluster_invalid_kafka_version[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_kafka_version[unsupported]",
            "test": "test_create_cluster_invalid_kafka_version[unsupported]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "test": "test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group",
            "test": "test_create_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_already_exists",
            "test": "test_create_db_subnet_group_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_duplicate_subnet",
            "test": "test_create_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_casing",
            "test": "test_db_subnet_group_casing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_tagging",
            "test": "test_db_subnet_group_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_delete_db_subnet_group",
            "test": "test_delete_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_describe_db_subnet_groups",
            "test": "test_describe_db_subnet_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group",
            "test": "test_modify_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_duplicate_subnet",
            "test": "test_modify_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_empty_desc",
            "test": "test_modify_db_subnet_group_empty_desc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy",
            "test": "test_create_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxy.CreatedDate', '$..DBProxy.DebugLogging', '$..DBProxy.Endpoint', '$..DBProxy.IdleClientTimeout', '$..DBProxy.RequireTLS', '$..DBProxy.Status', '$..DBProxy.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_create_db_proxy_endpoint",
            "test": "test_create_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.Status', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_delete_db_proxy_endpoint",
            "test": "test_delete_db_proxy_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoint.Endpoint', '$..DBProxyEndpoint.VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbProxyCRUD::test_describe_db_proxy_endpoints",
            "test": "test_describe_db_proxy_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBProxyEndpoints..Endpoint', '$..DBProxyEndpoints..Status', '$..DBProxyEndpoints..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/route53/test_route53_replication.py::TestHostedZoneReplication::test_replication_private_zone",
            "test": "test_replication_private_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteVpcEndpointServiceConfigurations": {
      "ServiceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteVpcEndpoints": {
      "VpcEndpointIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_endpoint",
            "test": "test_create_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "500",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "DeleteVpcPeeringConnection": {
      "VpcPeeringConnectionId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteVpnGateway": {
      "VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeAccountAttributes": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_pickle_ec2_backend",
            "test": "test_pickle_ec2_backend",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeAvailabilityZones": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[ap-northeast-1]",
            "test": "test_get_azs_function[ap-northeast-1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[ap-southeast-2]",
            "test": "test_get_azs_function[ap-southeast-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[eu-central-1]",
            "test": "test_get_azs_function[eu-central-1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[eu-west-1]",
            "test": "test_get_azs_function[eu-west-1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[us-east-1]",
            "test": "test_get_azs_function[us-east-1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[us-east-2]",
            "test": "test_get_azs_function[us-east-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[us-west-1]",
            "test": "test_get_azs_function[us-west-1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/test_template_engine.py::TestIntrinsicFunctions::test_get_azs_function[us-west-2]",
            "test": "test_get_azs_function[us-west-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codebuild/test_codebuild.py::TestCodeBuild::test_environment_credentials_endpoint_region",
            "test": "test_environment_credentials_endpoint_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_describe_availability_zones_filters",
            "test": "test_describe_availability_zones_filters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AvailabilityZones..GroupLongName', '$..AvailabilityZones..GroupName', '$..AvailabilityZones..NetworkBorderGroup', '$..AvailabilityZones..OptInStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "ZoneIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_describe_availability_zones_filter_with_zone_ids",
            "test": "test_describe_availability_zones_filter_with_zone_ids",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AvailabilityZones..GroupLongName', '$..AvailabilityZones..GroupName', '$..AvailabilityZones..NetworkBorderGroup', '$..AvailabilityZones..OptInStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "ZoneNames": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_describe_availability_zones_filter_with_zone_names",
            "test": "test_describe_availability_zones_filter_with_zone_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AvailabilityZones..GroupLongName', '$..AvailabilityZones..GroupName', '$..AvailabilityZones..NetworkBorderGroup', '$..AvailabilityZones..OptInStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeDhcpOptions": {
      "DhcpOptionsIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_dhcp_options",
            "test": "test_dhcp_options",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..OwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeFlowLogs": {
      "FlowLogIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2FlowLogs::test_ec2_flow_logs_s3",
            "test": "test_ec2_flow_logs_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ClientToken']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeImages": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_create_asg_errors",
            "test": "test_create_asg_errors",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/autoscaling/test_autoscaling.py::TestAutoScaling::test_metrics_collection",
            "test": "test_metrics_collection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_image_with_unsupported_image_name",
            "test": "test_describe_image_with_unsupported_image_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_images",
            "test": "test_describe_images",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_images_with_podman_localhost_prefix",
            "test": "test_describe_images_with_podman_localhost_prefix",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestEcsDocker::test_start_and_stop_task[start_task]",
            "test": "test_start_and_stop_task[start_task]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters, Owners": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_additional_amis_present",
            "test": "test_additional_amis_present",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ImageIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_create_instance_with_ebs_create_fs",
            "test": "test_create_instance_with_ebs_create_fs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_instances",
            "test": "test_describe_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_instance_metadata_service",
            "test": "test_instance_metadata_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[alpine-3.20]",
            "test": "test_ssh_key_pairs[alpine-3.20]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2023]",
            "test": "test_ssh_key_pairs[amazonlinux-2023]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2]",
            "test": "test_ssh_key_pairs[amazonlinux-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[ubuntu-22.04]",
            "test": "test_ssh_key_pairs[ubuntu-22.04]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_id",
            "test": "test_ami_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_launch_index",
            "test": "test_ami_launch_index",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_imdsv2_ttl",
            "test": "test_imdsv2_ttl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_id",
            "test": "test_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_identity_document",
            "test": "test_instance_identity_document",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_type",
            "test": "test_instance_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_hostname",
            "test": "test_local_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_ipv4",
            "test": "test_local_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_metadata_categories",
            "test": "test_metadata_categories",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_hostname",
            "test": "test_public_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_ipv4",
            "test": "test_public_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_versions",
            "test": "test_versions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_cancel_command",
            "test": "test_cancel_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_custom_documents",
            "test": "test_custom_documents",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information",
            "test": "test_describe_instance_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information_filtered_by_instance_id",
            "test": "test_describe_instance_information_filtered_by_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_send_command",
            "test": "test_send_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_images",
            "test": "test_describe_images",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_run_invalid_image",
            "test": "test_run_invalid_image",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeInstances": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_everywhere",
            "test": "test_fault_everywhere",
            "response": "503",
            "error": "FaultException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[EC2]",
            "test": "test_create_compute_environment_success[EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE]",
            "test": "test_create_compute_environment_success[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE_SPOT]",
            "test": "test_create_compute_environment_success[FARGATE_SPOT]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_env_with_tags",
            "test": "test_create_env_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_env_with_job_queue",
            "test": "test_delete_compute_env_with_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment_invalid_state",
            "test": "test_delete_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment",
            "test": "test_update_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment_invalid_state",
            "test": "test_update_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_already_exists",
            "test": "test_create_job_queue_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_same_order",
            "test": "test_create_job_queue_multiple_compute_envs_same_order",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-arn]",
            "test": "test_create_job_queue_success[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-name]",
            "test": "test_create_job_queue_success[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy",
            "test": "test_create_job_queue_with_scheduling_policy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy_non_existing",
            "test": "test_create_job_queue_with_scheduling_policy_non_existing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_tags",
            "test": "test_create_job_queue_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_delete_existing_job_queue",
            "test": "test_delete_existing_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_priority",
            "test": "test_update_job_queue_invalid_priority",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_state",
            "test": "test_update_job_queue_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags_with_volumes",
            "test": "test_batch_docker_flags_with_volumes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "test": "test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "test": "test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_extra_env_vars",
            "test": "test_submit_job_ecs_e2e_flow_extra_env_vars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_fargate",
            "test": "test_submit_job_ecs_e2e_flow_fargate",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.fargatePlatformConfiguration', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs",
            "test": "test_submit_job_logs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_depends_on_invalid",
            "test": "test_submit_job_with_depends_on_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_compute_env_tags",
            "test": "test_compute_env_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_ecs_stop_task",
            "test": "test_action_ecs_stop_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_instances",
            "test": "test_describe_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_instance_metadata_service",
            "test": "test_instance_metadata_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_id",
            "test": "test_ami_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_launch_index",
            "test": "test_ami_launch_index",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_imdsv2_ttl",
            "test": "test_imdsv2_ttl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_id",
            "test": "test_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_identity_document",
            "test": "test_instance_identity_document",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_type",
            "test": "test_instance_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_hostname",
            "test": "test_local_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_ipv4",
            "test": "test_local_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_hostname",
            "test": "test_public_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_ipv4",
            "test": "test_public_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_instances",
            "test": "test_describe_instances",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeInternetGateways": {
      "InternetGatewayIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_elb_validation",
            "test": "test_apigatewayv2_elb_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeKeyPairs": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "KeyNames": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_instance_with_key_pair",
            "test": "test_deploy_instance_with_key_pair",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..KeyPairs..KeyType', '$..KeyPairs..Tags', '$..Error..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_keypair_create_import",
            "test": "test_keypair_create_import",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ImportedKeyPairFingerprint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/integration/test_stores.py::test_nonstandard_regions",
            "test": "test_nonstandard_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_instance_with_key_pair",
            "test": "test_deploy_instance_with_key_pair",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..KeyPairs..KeyType', '$..KeyPairs..Tags', '$..Error..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeLaunchTemplates": {
      "LaunchTemplateIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_launch_template",
            "test": "test_ec2_launch_template",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..CreatedBy', '$..LaunchTemplateId', '$..LaunchTemplateName', '$..PhysicalResourceId', '$..Tags', '$..StackId', '$..StackName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "LaunchTemplateNames": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_create_nodegroup_with_tags",
            "test": "test_create_nodegroup_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..releaseVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeManagedPrefixLists": {
      "PrefixListIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_prefix_list",
            "test": "test_deploy_prefix_list",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_prefix_list",
            "test": "test_deploy_prefix_list",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeNatGateways": {
      "NatGatewayIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeNetworkAcls": {
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "NetworkAclIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeNetworkInterfaces": {
      "Filters, MaxResults": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeRegions": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_all_services_in_region",
            "test": "test_fault_all_services_in_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/chaos/test_faults.py::TestFaults::test_fault_all_services_in_region",
            "test": "test_fault_all_services_in_region",
            "response": "503",
            "error": "FaultException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeReservedInstances": {
      "OfferingClass, OfferingType, ReservedInstancesIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeReservedInstancesOfferings": {
      "AvailabilityZone, IncludeMarketplace, InstanceType, OfferingClass, OfferingType, ProductDescription, ReservedInstancesOfferingIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeRouteTables": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "RouteTableIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeSecurityGroupRules": {
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "SecurityGroupRuleIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeSecurityGroups": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_list_security_groups",
            "test": "test_list_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source",
            "test": "test_rds_data_source",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventRdsDatasource::test_rds_simple",
            "test": "test_rds_simple",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_instance_role",
            "test": "test_create_compute_environment_invalid_instance_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_service_role",
            "test": "test_create_compute_environment_invalid_service_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_subnets",
            "test": "test_create_compute_environment_invalid_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[EC2]",
            "test": "test_create_compute_environment_success[EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE]",
            "test": "test_create_compute_environment_success[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE_SPOT]",
            "test": "test_create_compute_environment_success[FARGATE_SPOT]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_env_with_tags",
            "test": "test_create_env_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_env_with_job_queue",
            "test": "test_delete_compute_env_with_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[False]",
            "test": "test_delete_compute_environment[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[True]",
            "test": "test_delete_compute_environment[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment_invalid_state",
            "test": "test_delete_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment",
            "test": "test_update_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment_invalid_state",
            "test": "test_update_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_already_exists",
            "test": "test_create_job_queue_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_same_order",
            "test": "test_create_job_queue_multiple_compute_envs_same_order",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-arn]",
            "test": "test_create_job_queue_success[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-name]",
            "test": "test_create_job_queue_success[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy",
            "test": "test_create_job_queue_with_scheduling_policy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy_non_existing",
            "test": "test_create_job_queue_with_scheduling_policy_non_existing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_tags",
            "test": "test_create_job_queue_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_delete_existing_job_queue",
            "test": "test_delete_existing_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_priority",
            "test": "test_update_job_queue_invalid_priority",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_state",
            "test": "test_update_job_queue_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags_with_volumes",
            "test": "test_batch_docker_flags_with_volumes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "test": "test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "test": "test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_extra_env_vars",
            "test": "test_submit_job_ecs_e2e_flow_extra_env_vars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_fargate",
            "test": "test_submit_job_ecs_e2e_flow_fargate",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.fargatePlatformConfiguration', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs",
            "test": "test_submit_job_logs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_depends_on_invalid",
            "test": "test_submit_job_with_depends_on_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_compute_env_tags",
            "test": "test_compute_env_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_docdb.py::TestCfnDocDbResources::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment[rds_cluster.yml]",
            "test": "test_db_cluster_deployment[rds_cluster.yml]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment[rds_serverless_cluster.yml]",
            "test": "test_db_cluster_deployment[rds_serverless_cluster.yml]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_instance_deployment",
            "test": "test_db_instance_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DbAddress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db",
            "test": "test_create_query_db",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db_with_port",
            "test": "test_create_query_db_with_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_transactions",
            "test": "test_transactions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_rds_reboot_db_instances",
            "test": "test_action_rds_reboot_db_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_cluster_with_tags",
            "test": "test_create_cluster_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_neo4j_cluster",
            "test": "test_create_neo4j_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.1.0.0-3.4.11-False]",
            "test": "test_create_query_db[1.1.0.0-3.4.11-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.0.1-3.5.2-False]",
            "test": "test_create_query_db[1.2.0.1-3.5.2-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.1.0-3.6.2-False]",
            "test": "test_create_query_db[1.2.1.0-3.6.2-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.7.4-False]",
            "test": "test_create_query_db[None-3.7.4-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.7.4-True]",
            "test": "test_create_query_db[None-3.7.4-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db_tags",
            "test": "test_create_query_db_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_vertex_multi_label[False]",
            "test": "test_vertex_multi_label[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_vertex_multi_label[True]",
            "test": "test_vertex_multi_label[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[False-False]",
            "test": "test_cluster_endpoint_address[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[False-True]",
            "test": "test_cluster_endpoint_address[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[True-False]",
            "test": "test_cluster_endpoint_address[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[True-True]",
            "test": "test_cluster_endpoint_address[True-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMariaDB::test_create_mariadb",
            "test": "test_create_mariadb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMssql::test_create_mssql",
            "test": "test_create_mssql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db[provisioned-8.0.mysql_aurora.3.04.0]",
            "test": "test_create_aurora_db[provisioned-8.0.mysql_aurora.3.04.0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBParameterGroups..DBParameterGroupName', '$..Endpoint', '$..Port', '$..PreferredMaintenanceWindow', '$..ReaderEndpoint', '$..StatusInfos', '$..StorageType', '$..StorageEncrypted', '$..DatabaseName', '$..DbInstancePort', '$..DBName', '$..EnabledCloudwatchLogsExports', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..CopyTagsToSnapshot', '$..ClusterCreateTime', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..AllocatedStorage', '$..BackupTarget', '$..CACertificateIdentifier', '$..CertificateDetails', '$..CustomerOwnedIpEnabled', '$..DBName', '$..DedicatedLogVolume', '$..MonitoringInterval', '$..NetworkType', '$..OptionGroupMemberships..OptionGroupName', '$..PendingModifiedValues', '$..StorageThroughput', '$..PerformanceInsightsKMSKeyId', '$..LocalWriteForwardingStatus', '$..AvailabilityZone', '$..LicenseModel', '$..PubliclyAccessible']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db[serverless-5.7.mysql_aurora.2.11.4]",
            "test": "test_create_aurora_db[serverless-5.7.mysql_aurora.2.11.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBParameterGroups..DBParameterGroupName', '$..Endpoint', '$..Port', '$..PreferredMaintenanceWindow', '$..ReaderEndpoint', '$..StatusInfos', '$..StorageType', '$..StorageEncrypted', '$..DatabaseName', '$..DbInstancePort', '$..DBName', '$..EnabledCloudwatchLogsExports', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..CopyTagsToSnapshot', '$..ClusterCreateTime', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..AllocatedStorage', '$..BackupTarget', '$..CACertificateIdentifier', '$..CertificateDetails', '$..CustomerOwnedIpEnabled', '$..DBName', '$..DedicatedLogVolume', '$..MonitoringInterval', '$..NetworkType', '$..OptionGroupMemberships..OptionGroupName', '$..PendingModifiedValues', '$..StorageThroughput', '$..PerformanceInsightsKMSKeyId', '$..LocalWriteForwardingStatus', '$..AvailabilityZone', '$..LicenseModel', '$..PubliclyAccessible']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db_invalid_version",
            "test": "test_create_aurora_db_invalid_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[False-5.7.39-MariaDB]",
            "test": "test_create_mysql[False-5.7.39-MariaDB]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[True-8.0.30-MySQL Community Server]",
            "test": "test_create_mysql[True-8.0.30-MySQL Community Server]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_delete_db_parameters_in_use",
            "test": "test_delete_db_parameters_in_use",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_cluster",
            "test": "test_add_role_to_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_instance",
            "test": "test_add_role_to_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster",
            "test": "test_create_aurora_v2_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..StorageType', '$..AvailabilityZone', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_delete_instances",
            "test": "test_create_aurora_v2_cluster_delete_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..delete_db_cluster.DBCluster.DBClusterMembers', '$..delete_db_cluster.DBCluster.Status', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_reboot_instances",
            "test": "test_create_aurora_v2_cluster_reboot_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..DedicatedLogVolume', '$.reboot-db-instance.DBInstance.DBInstanceStatus', '$..DBInstance.IAMDatabaseAuthenticationEnabled', '$..DBInstance.MultiAZ', '$..DBInstance.OptionGroupMemberships', '$..DBInstance.StorageEncrypted', '$..DBInstance.TagList', '$..DBInstance.DbiResourceId', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_db_custom_port",
            "test": "test_create_db_custom_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-database-name]",
            "test": "test_create_postgres[default-database-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-username]",
            "test": "test_create_postgres[default-username]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[no-special-values]",
            "test": "test_create_postgres[no-special-values]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_cluster",
            "test": "test_create_snapshot_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_instance",
            "test": "test_create_snapshot_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_already_exists",
            "test": "test_db_cluster_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_endpoints",
            "test": "test_db_cluster_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_scaling",
            "test": "test_db_cluster_scaling",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_start_stop",
            "test": "test_db_cluster_start_stop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseInsightsMode', '$..DatabaseName', '$..EngineLifecycleSupport', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..AutomaticRestartTime', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_instance_already_exists",
            "test": "test_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_describe_db_instance_filters",
            "test": "test_describe_db_instance_filters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_grant_rds_iam_query_with_quote",
            "test": "test_grant_rds_iam_query_with_quote",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_cluster",
            "test": "test_modify_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_db_parametergroup_named_default",
            "test": "test_postgres_db_parametergroup_named_default",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[13.15]",
            "test": "test_postgres_versions[13.15]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[16.1]",
            "test": "test_postgres_versions[16.1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[17.5]",
            "test": "test_postgres_versions[17.5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_multiple_instances",
            "test": "test_reboot_db_multiple_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_serverless_no_custom_cluster_endpoint",
            "test": "test_serverless_no_custom_cluster_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..DBClusterParameterGroup', '$..StorageEncrypted', '$..DatabaseName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresCrossAccount::test_create_restore_snapshot_cluster_cross_account",
            "test": "test_create_restore_snapshot_cluster_cross_account",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresCrossAccount::test_create_restore_snapshot_instance_cross_account",
            "test": "test_create_restore_snapshot_instance_cross_account",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_cluster_with_instances",
            "test": "test_reset_cluster_with_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mariadb]",
            "test": "test_reset_db_instance[mariadb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mysql]",
            "test": "test_reset_db_instance[mysql]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[sqlserver-se]",
            "test": "test_reset_db_instance[sqlserver-se]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_already_exists",
            "test": "test_create_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_mysql",
            "test": "test_create_db_instance_mysql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_postgres",
            "test": "test_create_db_instance_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..VpcSecurityGroups']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_tagging",
            "test": "test_create_db_instance_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_skip_final_snapshot",
            "test": "test_delete_db_instance_skip_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_with_deletion_protection",
            "test": "test_delete_db_instance_with_deletion_protection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_describe_db_instance_in_cluster",
            "test": "test_describe_db_instance_in_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_describe_db_instance_tagging",
            "test": "test_describe_db_instance_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance",
            "test": "test_modify_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_db_parameter_group_not_found",
            "test": "test_modify_db_instance_db_parameter_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password",
            "test": "test_modify_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password_invalid",
            "test": "test_modify_db_instance_manage_master_user_password_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_option_group_not_found",
            "test": "test_modify_db_instance_option_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_rename",
            "test": "test_modify_db_instance_rename",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_vpc_security_group_not_found",
            "test": "test_modify_db_instance_vpc_security_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_instance_port",
            "test": "test_modify_instance_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_start_stop_db_instance",
            "test": "test_start_stop_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password",
            "test": "test_create_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password_with_kms_key",
            "test": "test_create_db_cluster_manage_master_user_password_with_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_cluster_port",
            "test": "test_modify_cluster_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password",
            "test": "test_modify_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password_invalid",
            "test": "test_modify_db_cluster_manage_master_user_password_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[False-False]",
            "test": "test_create_db_snapshot[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[False-True]",
            "test": "test_create_db_snapshot[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[True-False]",
            "test": "test_create_db_snapshot[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[True-True]",
            "test": "test_create_db_snapshot[True-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot_mysql",
            "test": "test_create_db_snapshot_mysql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_delete_db_snapshot_success",
            "test": "test_delete_db_snapshot_success",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_describe_db_snapshot_filter_by_instance",
            "test": "test_describe_db_snapshot_filter_by_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshots..DedicatedLogVolume', '$..DBSnapshots..LicenseModel', '$..DBSnapshots..OptionGroupName', '$..DBSnapshots..VpcId', '$..DBSnapshots..TagList', '$..DBSnapshots..ProcessorFeatures', '$..DBSnapshots..MultiTenant', '$..DBSnapshots..OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[True]",
            "test": "test_data_api[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgres::test_max_connections",
            "test": "test_max_connections",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_read_write",
            "test": "test_global_cluster_read_write",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_remove_instances_from_cluster",
            "test": "test_global_cluster_remove_instances_from_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_invalid_secondary_cluster",
            "test": "test_invalid_secondary_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_promote_secondary_headless",
            "test": "test_promote_secondary_headless",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "GroupIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_security_group_with_tags",
            "test": "test_deploy_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-id_manager]",
            "test": "test_create_security_group_with_custom_id[False-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[False-tag]",
            "test": "test_create_security_group_with_custom_id[False-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-id_manager]",
            "test": "test_create_security_group_with_custom_id[True-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-tag]",
            "test": "test_create_security_group_with_custom_id[True-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_instance_role",
            "test": "test_create_compute_environment_invalid_instance_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_service_role",
            "test": "test_create_compute_environment_invalid_service_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_subnets",
            "test": "test_create_compute_environment_invalid_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[EC2]",
            "test": "test_create_compute_environment_success[EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE]",
            "test": "test_create_compute_environment_success[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE_SPOT]",
            "test": "test_create_compute_environment_success[FARGATE_SPOT]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_env_with_tags",
            "test": "test_create_env_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_env_with_job_queue",
            "test": "test_delete_compute_env_with_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[False]",
            "test": "test_delete_compute_environment[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[True]",
            "test": "test_delete_compute_environment[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment_invalid_state",
            "test": "test_delete_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment",
            "test": "test_update_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment_invalid_state",
            "test": "test_update_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_already_exists",
            "test": "test_create_job_queue_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_same_order",
            "test": "test_create_job_queue_multiple_compute_envs_same_order",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-arn]",
            "test": "test_create_job_queue_success[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-name]",
            "test": "test_create_job_queue_success[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy",
            "test": "test_create_job_queue_with_scheduling_policy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy_non_existing",
            "test": "test_create_job_queue_with_scheduling_policy_non_existing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_tags",
            "test": "test_create_job_queue_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_delete_existing_job_queue",
            "test": "test_delete_existing_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_priority",
            "test": "test_update_job_queue_invalid_priority",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_state",
            "test": "test_update_job_queue_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags_with_volumes",
            "test": "test_batch_docker_flags_with_volumes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "test": "test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "test": "test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_extra_env_vars",
            "test": "test_submit_job_ecs_e2e_flow_extra_env_vars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_fargate",
            "test": "test_submit_job_ecs_e2e_flow_fargate",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.fargatePlatformConfiguration', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs",
            "test": "test_submit_job_logs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_depends_on_invalid",
            "test": "test_submit_job_with_depends_on_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_compute_env_tags",
            "test": "test_compute_env_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group",
            "test": "test_read_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_with_tags",
            "test": "test_read_security_group_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_cluster_security_groups",
            "test": "test_cluster_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags', '$..SecurityGroups..IpPermissions..UserIdGroupPairs', '$..SecurityGroups..IpPermissionsEgress..UserIdGroupPairs']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_with_existing_vpc_security_group",
            "test": "test_create_db_instance_with_existing_vpc_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[arn]",
            "test": "test_successful_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_replicate_securitygroup.py::TestEc2SecurityReplication::test_successful_replication[identifier]",
            "test": "test_successful_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_read_security_group_not_found",
            "test": "test_read_security_group_not_found",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_non_existing_vpc_security_group",
            "test": "test_create_db_instance_non_existing_vpc_security_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_vpc_security_group_not_found",
            "test": "test_modify_db_instance_vpc_security_group_not_found",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "MaxResults": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_invalid_vpc_config_subnet",
            "test": "test_invalid_vpc_config_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeSubnets": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_list_subnets",
            "test": "test_list_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/efs/test_efs.py::TestEfsFileSystemCrud::test_mount_target",
            "test": "test_mount_target",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.create-fs.LifeCycleState', '$.create-fs.SizeInBytes.Timestamp', '$.create-fs.SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes', '$..FileSystems..Name', '$..ErrorCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_load_balancers",
            "test": "test_describe_load_balancers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..LoadBalancers..State.Code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_associate_and_disassociate_resolver_rule",
            "test": "test_associate_and_disassociate_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[INBOUND-5]",
            "test": "test_create_resolver_endpoint[INBOUND-5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_endpoint[OUTBOUND-10]",
            "test": "test_create_resolver_endpoint[OUTBOUND-10]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule",
            "test": "test_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_create_resolver_rule_with_invalid_direction",
            "test": "test_create_resolver_rule_with_invalid_direction",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_delete_resolver_endpoint",
            "test": "test_delete_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multipe_create_resolver_rule",
            "test": "test_multipe_create_resolver_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_multiple_create_resolver_endpoint_with_same_req_id",
            "test": "test_multiple_create_resolver_endpoint_with_same_req_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_route53resolver_bad_create_endpoint_security_groups",
            "test": "test_route53resolver_bad_create_endpoint_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53resolver/test_route53resolver.py::TestRoute53Resolver::test_update_resolver_endpoint",
            "test": "test_update_resolver_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResolverEndpointType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/applicationautoscaling/test_application_autoscaling.py::TestAppAutoscaling::test_ecs_register_scalable_target",
            "test": "test_ecs_register_scalable_target",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ScalableTargetARN', '$..ScalableTargets..RoleARN', '$..ScalableTargets..SuspendedState']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_instance_role",
            "test": "test_create_compute_environment_invalid_instance_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_service_role",
            "test": "test_create_compute_environment_invalid_service_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_subnets",
            "test": "test_create_compute_environment_invalid_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[EC2]",
            "test": "test_create_compute_environment_success[EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE]",
            "test": "test_create_compute_environment_success[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE_SPOT]",
            "test": "test_create_compute_environment_success[FARGATE_SPOT]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_env_with_tags",
            "test": "test_create_env_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_env_with_job_queue",
            "test": "test_delete_compute_env_with_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[False]",
            "test": "test_delete_compute_environment[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[True]",
            "test": "test_delete_compute_environment[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment_invalid_state",
            "test": "test_delete_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment",
            "test": "test_update_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment_invalid_state",
            "test": "test_update_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_already_exists",
            "test": "test_create_job_queue_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_same_order",
            "test": "test_create_job_queue_multiple_compute_envs_same_order",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-arn]",
            "test": "test_create_job_queue_success[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-name]",
            "test": "test_create_job_queue_success[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy",
            "test": "test_create_job_queue_with_scheduling_policy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy_non_existing",
            "test": "test_create_job_queue_with_scheduling_policy_non_existing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_tags",
            "test": "test_create_job_queue_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_delete_existing_job_queue",
            "test": "test_delete_existing_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_priority",
            "test": "test_update_job_queue_invalid_priority",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_state",
            "test": "test_update_job_queue_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags_with_volumes",
            "test": "test_batch_docker_flags_with_volumes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "test": "test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "test": "test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_extra_env_vars",
            "test": "test_submit_job_ecs_e2e_flow_extra_env_vars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_fargate",
            "test": "test_submit_job_ecs_e2e_flow_fargate",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.fargatePlatformConfiguration', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs",
            "test": "test_submit_job_logs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_depends_on_invalid",
            "test": "test_submit_job_with_depends_on_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_compute_env_tags",
            "test": "test_compute_env_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_custom_origin_config_http_port_elb_integration",
            "test": "test_custom_origin_config_http_port_elb_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_tag_task",
            "test": "test_tag_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_nonexistent_secrets",
            "test": "test_create_task_with_nonexistent_secrets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..attachments', '$..group', '$..managedAgents', '$..networkInterfaces', '$..overrides', '$..stoppedReason', '$..enableExecuteCommand', '$..startedBy', '$..runtimeId', '$..executionStoppedAt', '$..fargateEphemeralStorage', '$..networkBindings', '$..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[False-]",
            "test": "test_create_task_with_secrets[False-]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[True-/test/]",
            "test": "test_create_task_with_secrets[True-/test/]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_task_with_secrets[True-]",
            "test": "test_create_task_with_secrets[True-]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_ecs_task_overrides",
            "test": "test_ecs_task_overrides",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_environment_variable_expansion",
            "test": "test_environment_variable_expansion",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cpu', '$..memory', '$..registeredBy', '$..requiresAttributes', '$..containerDefinitions..systemControls', '$.environment.AWS_ACCESS_KEY_ID', '$.environment.AWS_ENDPOINT_URL', '$.environment.AWS_SECRET_ACCESS_KEY', '$.environment.LOCALSTACK_HOSTNAME', '$.environment.AWS_CONTAINER_CREDENTIALS_RELATIVE_URI', '$.environment.ECS_AGENT_URI', '$.environment.ECS_CONTAINER_METADATA_URI', '$.environment.ECS_CONTAINER_METADATA_URI_V4', '$.environment.HOSTNAME']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_failed_tasks_log_to_cloudwatch",
            "test": "test_failed_tasks_log_to_cloudwatch",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_firelens_config_from_s3",
            "test": "test_firelens_config_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_get_aws_execution_env_from_task[FARGATE]",
            "test": "test_get_aws_execution_env_from_task[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[False-False]",
            "test": "test_read_from_json_secret[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[False-True]",
            "test": "test_read_from_json_secret[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_read_from_json_secret[True-False]",
            "test": "test_read_from_json_secret[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..desiredStatus', '$..stoppedReason', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task[16GB-2 vCPU-8192]",
            "test": "test_run_simple_task[16GB-2 vCPU-8192]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task[1GB-0.5 vCPU-256]",
            "test": "test_run_simple_task[1GB-0.5 vCPU-256]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task_ec2[16GB-2 vCPU-8192]",
            "test": "test_run_simple_task_ec2[16GB-2 vCPU-8192]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_simple_task_ec2[1GB-0.5 vCPU-256]",
            "test": "test_run_simple_task_ec2[1GB-0.5 vCPU-256]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_in_cluster_with_large_name",
            "test": "test_run_task_in_cluster_with_large_name",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_run_task_non_default_region",
            "test": "test_run_task_non_default_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_definition_with_cap_drop",
            "test": "test_start_task_definition_with_cap_drop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_start_task_state_stopped",
            "test": "test_start_task_state_stopped",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_task_generates_logs_live",
            "test": "test_task_generates_logs_live",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTasksCrud::test_list_tasks_with_cluster_and_service",
            "test": "test_list_tasks_with_cluster_and_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[test]",
            "test": "test_invalid_k8s_versions[test]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_entry_lifecycle[iam_role]",
            "test": "test_access_entry_lifecycle[iam_role]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_ecr_eks_integration",
            "test": "test_ecr_eks_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[port-and-protocol]",
            "test": "test_create_gateway_listener_with_port_or_protocol[port-and-protocol]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[port-only]",
            "test": "test_create_gateway_listener_with_port_or_protocol[port-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[protocol-only]",
            "test": "test_create_gateway_listener_with_port_or_protocol[protocol-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-GENEVE]",
            "test": "test_create_listener_invalid_protocols[network-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-HTTPS]",
            "test": "test_create_listener_invalid_protocols[network-HTTPS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-HTTP]",
            "test": "test_create_listener_invalid_protocols[network-HTTP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[network-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_nlb_modify_attributes",
            "test": "test_nlb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'dns_record.client_routing_policy'\", \"$.._AttributesDict.'zonal_shift.config.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions0]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions1]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions2]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions3]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions4]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions5]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions6]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions6]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions7]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions8]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_load_balancer",
            "test": "test_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_capacity_reservation",
            "test": "test_describe_capacity_reservation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_listener_attributes",
            "test": "test_describe_listener_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_non_existent_listener",
            "test": "test_describe_non_existent_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_failing_create_load_balancer",
            "test": "test_failing_create_load_balancer",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions0-modify_conditions0]",
            "test": "test_modify_rule[create_conditions0-modify_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions1-modify_conditions1]",
            "test": "test_modify_rule[create_conditions1-modify_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions2-modify_conditions2]",
            "test": "test_modify_rule[create_conditions2-modify_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions3-modify_conditions3]",
            "test": "test_modify_rule[create_conditions3-modify_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_set_rule_priorities",
            "test": "test_set_rule_priorities",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-4566]",
            "test": "test_route53_elb_integration[port-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-80]",
            "test": "test_route53_elb_integration[port-80]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_broker_crud",
            "test": "test_broker_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..body', '$..MaintenanceWindowStartTime', '$..Users', '$..AuthenticationStrategy', '$..AutoMinorVersionUpgrade', '$..BrokerInstances', '$..EncryptionOptions', '$..Logs', '$..Configurations', '$..EngineVersion', '$..PubliclyAccessible', '$..SecurityGroups', '$..StorageType', '$..SubnetIds', '$..EngineType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_create_tags",
            "test": "test_create_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_delete_tags",
            "test": "test_delete_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_invalid_broker",
            "test": "test_invalid_broker",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_list_brokers",
            "test": "test_list_brokers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerState', '$..EngineType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_send_to_active_mq",
            "test": "test_send_to_active_mq",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_send_to_activemq_curl",
            "test": "test_send_to_activemq_curl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing_cfn",
            "test": "test_elb_routing_cfn",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/sagemaker/test_sagemaker.py::TestSagemaker::test_domain_user_profile_lifecycle",
            "test": "test_domain_user_profile_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_mq",
            "test": "test_mq",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "SubnetIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id",
            "test": "test_create_subnet_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_custom_id_and_vpc_id",
            "test": "test_create_subnet_with_custom_id_and_vpc_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_subnet_with_tags",
            "test": "test_create_subnet_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_invalid_vpc_config_subnet",
            "test": "test_invalid_vpc_config_subnet",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_compute_environment_ecs_integration",
            "test": "test_compute_environment_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..clusters..settings', '$..clusters..statistics', '$..clusters..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_instance_role",
            "test": "test_create_compute_environment_invalid_instance_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_service_role",
            "test": "test_create_compute_environment_invalid_service_role",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[EC2]",
            "test": "test_create_compute_environment_success[EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE]",
            "test": "test_create_compute_environment_success[FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_success[FARGATE_SPOT]",
            "test": "test_create_compute_environment_success[FARGATE_SPOT]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_env_with_tags",
            "test": "test_create_env_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_env_with_job_queue",
            "test": "test_delete_compute_env_with_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[False]",
            "test": "test_delete_compute_environment[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment[True]",
            "test": "test_delete_compute_environment[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_delete_compute_environment_invalid_state",
            "test": "test_delete_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment",
            "test": "test_update_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_update_compute_environment_invalid_state",
            "test": "test_update_compute_environment_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_already_exists",
            "test": "test_create_job_queue_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_order[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "test": "test_create_job_queue_multiple_compute_envs_different_provisioning_types[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_multiple_compute_envs_same_order",
            "test": "test_create_job_queue_multiple_compute_envs_same_order",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-arn]",
            "test": "test_create_job_queue_success[use-arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_success[use-name]",
            "test": "test_create_job_queue_success[use-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy",
            "test": "test_create_job_queue_with_scheduling_policy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_scheduling_policy_non_existing",
            "test": "test_create_job_queue_with_scheduling_policy_non_existing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_create_job_queue_with_tags",
            "test": "test_create_job_queue_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_delete_existing_job_queue",
            "test": "test_delete_existing_job_queue",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_priority",
            "test": "test_update_job_queue_invalid_priority",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_invalid_state",
            "test": "test_update_job_queue_invalid_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_job_queues.py::TestBatchJobQueueCRUD::test_update_job_queue_state",
            "test": "test_update_job_queue_state",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags",
            "test": "test_batch_docker_flags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_batch_docker_flags_with_volumes",
            "test": "test_batch_docker_flags_with_volumes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_describe_jobs",
            "test": "test_describe_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_events_job_state_change",
            "test": "test_events_job_state_change",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Messages..Body.detail.container.containerInstanceArn', '$..Messages..Body.detail.container.logStreamName', '$..Messages..Body.detail.container.networkInterfaces', '$..Messages..Body.detail.container.taskArn', '$..Messages..Body.detail.container.exitCode', '$..Messages..Body.detail.attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_job_failure",
            "test": "test_job_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..jobs..container.reason', '$..jobs..startedAt', '$..jobs..statusReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_list_jobs",
            "test": "test_list_jobs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..statusReason', '$..jobSummaryList..jobDefinition']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "test": "test_submit_job_ec2_fargate_incompatible[EC2-FARGATE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "test": "test_submit_job_ec2_fargate_incompatible[FARGATE-EC2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow",
            "test": "test_submit_job_ecs_e2e_flow",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_extra_env_vars",
            "test": "test_submit_job_ecs_e2e_flow_extra_env_vars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_ecs_e2e_flow_fargate",
            "test": "test_submit_job_ecs_e2e_flow_fargate",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.fargatePlatformConfiguration', '$..jobs..attempts', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..containers..networkInterfaces', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..overrides.containerOverrides..resourceRequirements', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..capacityProviderName', '$..tasks..fargateEphemeralStorage', '$..tasks..attachments', '$..taskDefinition.containerDefinitions..memory', '$..taskDefinition.containerDefinitions..secrets', '$..taskDefinition.containerDefinitions..systemControls', '$..taskDefinition.networkMode', '$..taskDefinition.registeredBy', '$..taskDefinition.requiresAttributes', '$..taskDefinition.compatibilities', '$..taskDefinition.cpu', '$..taskDefinition.memory', '$..taskDefinition.requiresCompatibilities']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs",
            "test": "test_submit_job_logs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_logs_custom_log_group",
            "test": "test_submit_job_logs_custom_log_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency",
            "test": "test_submit_job_with_dependency",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version', '$..tasks..taskDefinitionArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_job_that_fails",
            "test": "test_submit_job_with_dependency_job_that_fails",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..startedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_dependency_non_existent_job",
            "test": "test_submit_job_with_dependency_non_existent_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_depends_on_invalid",
            "test": "test_submit_job_with_depends_on_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_more_than_one_size",
            "test": "test_submit_job_with_more_than_one_size",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobSummaryList..jobDefinition', '$..jobSummaryList..container', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName', '$..jobs..container.networkInterfaces', '$..tasks..availabilityZone', '$..tasks..containers..imageDigest', '$..tasks..containers..memory', '$..tasks..containers..runtimeId', '$..tasks..cpu', '$..tasks..ephemeralStorage', '$..tasks..executionStoppedAt', '$..tasks..group', '$..tasks..memory', '$..tasks..overrides.containerOverrides..cpu', '$..tasks..overrides.containerOverrides..memory', '$..tasks..overrides.inferenceAcceleratorOverrides', '$..tasks..platformFamily', '$..tasks..platformVersion', '$..tasks..startedBy', '$..tasks..stopCode', '$..tasks..stoppedReason', '$..tasks..version']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_parameters",
            "test": "test_submit_job_with_parameters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..attempts']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_submit_job_with_tags",
            "test": "test_submit_job_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.taskArn', '$..jobs..attempts', '$..jobs..container.containerInstanceArn', '$..jobs..container.logStreamName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_jobs.py::TestBatchJobCRUD::test_terminate_job",
            "test": "test_terminate_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..jobs..container.networkInterfaces', '$..jobs..container.containerInstanceArn', '$..jobs..container.exitCode', '$..jobs..attempts', '$..jobs..startedAt', '$..jobs..stoppedAt']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_compute_env_tags",
            "test": "test_compute_env_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_tags.py::TestBatchTags::test_job_queue_tags",
            "test": "test_job_queue_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet",
            "test": "test_read_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_msk.py::test_create_cluster",
            "test": "test_create_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[0]",
            "test": "test_invalid_k8s_versions[0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[1.60]",
            "test": "test_invalid_k8s_versions[1.60]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[100.1]",
            "test": "test_invalid_k8s_versions[100.1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[test]",
            "test": "test_invalid_k8s_versions[test]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_entry_lifecycle[iam_role]",
            "test": "test_access_entry_lifecycle[iam_role]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_ecr_eks_integration",
            "test": "test_ecr_eks_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/iam/test_iam_enforcement.py::TestIAMEnforcementIdentityBasedPolicies::test_batch_create_compute_environment",
            "test": "test_batch_create_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_cluster_v2_lifecycle",
            "test": "test_cluster_v2_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..NetworkInterfaces..Attachment', '$..NetworkInterfaces..Operator', '$..NetworkInterfaces..PrivateIpAddresses..PrivateDnsName', '$..NetworkInterfaces..PrivateDnsName', '$..NetworkInterfaces..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[invalid]",
            "test": "test_create_cluster_invalid_instance[invalid]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_instance[nonexistent]",
            "test": "test_create_cluster_invalid_instance[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[invalid_format]",
            "test": "test_create_cluster_invalid_security_groups[invalid_format]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_security_groups[nonexistent]",
            "test": "test_create_cluster_invalid_security_groups[nonexistent]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "test": "test_create_cluster_invalid_subnets[invalid_subnets_duplicate_az]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_interact_with_cluster",
            "test": "test_interact_with_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[False]",
            "test": "test_kafka_lambda_event_source_mapping[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_lambda_event_source_mapping[True]",
            "test": "test_kafka_lambda_event_source_mapping[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_list_nodes",
            "test": "test_list_nodes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[msk]",
            "test": "test_kafka_lambda_event_source_mapping[msk]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping[self-hosted]",
            "test": "test_kafka_lambda_event_source_mapping[self-hosted]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "test": "test_kafka_lambda_event_source_mapping_multi_topics_and_batches",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_header]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_key]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/lambda_/test_lambda_event_source_kafka.py::test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "test": "test_kafka_lambda_event_source_mapping_with_filter[by_value]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group",
            "test": "test_create_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_already_exists",
            "test": "test_create_db_subnet_group_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_duplicate_subnet",
            "test": "test_create_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_one_subnet",
            "test": "test_create_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_casing",
            "test": "test_db_subnet_group_casing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_db_subnet_group_tagging",
            "test": "test_db_subnet_group_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_delete_db_subnet_group",
            "test": "test_delete_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_describe_db_subnet_groups",
            "test": "test_describe_db_subnet_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group",
            "test": "test_modify_db_subnet_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_duplicate_subnet",
            "test": "test_modify_db_subnet_group_duplicate_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_empty_desc",
            "test": "test_modify_db_subnet_group_empty_desc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_one_subnet",
            "test": "test_modify_db_subnet_group_one_subnet",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_kafka",
            "test": "test_kafka",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_subnets",
            "test": "test_create_compute_environment_invalid_subnets",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_subnet.py::test_read_subnet_not_found",
            "test": "test_read_subnet_not_found",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_create_cluster_invalid_subnets[nonexistent]",
            "test": "test_create_cluster_invalid_subnets[nonexistent]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_db_subnet_group",
            "test": "test_db_subnet_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_create_db_subnet_group_non_existing_subnets",
            "test": "test_create_db_subnet_group_non_existing_subnets",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBSubnetGroupsCRUD::test_modify_db_subnet_group_non_existent_subnet",
            "test": "test_modify_db_subnet_group_non_existent_subnet",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeTransitGatewayAttachments": {
      "TransitGatewayAttachmentIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeTransitGateways": {
      "TransitGatewayIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcAttribute": {
      "Attribute, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DescribeVpcEndpointServiceConfigurations": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcEndpointServices": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpc_endpoints_with_filter",
            "test": "test_describe_vpc_endpoints_with_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcEndpoints": {
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-secret-manager]",
            "test": "test_vpc_endpoints[without-secret-manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      },
      "MaxResults": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "VpcEndpointIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_cdc_replication_data_queries",
            "test": "test_cdc_replication_data_queries",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType', '$..ReplicationStats.FullLoadFinishDate', '$..ReplicationStats.FullLoadStartDate', '$..Replication.ReplicationStats.StopDate']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_full_load_replication",
            "test": "test_full_load_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcPeeringConnections": {
      "VpcPeeringConnectionIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vcp_peering_difference_regions",
            "test": "test_vcp_peering_difference_regions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.CidrBlock', '$..pending-acceptance..VpcPeeringConnections..AccepterVpcInfo.PeeringOptions', '$..VpcPeeringConnections..AccepterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.CidrBlockSet', '$..VpcPeeringConnections..AccepterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..RequesterVpcInfo.Ipv6CidrBlockSet', '$..VpcPeeringConnections..ExpirationTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpcs": {
      "- (without any parameters)": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/apigateway/test_apigateway_integrations.py::test_create_execute_api_vpc_endpoint",
            "test": "test_create_execute_api_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..endpointConfiguration.types', '$..policy.Statement..Resource', '$..endpointConfiguration.ipAddressType', '$.endpoint-details.ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/test_multi_accounts.py::TestMultiAccounts::test_account_id_namespacing_for_moto_backends",
            "test": "test_account_id_namespacing_for_moto_backends",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/applicationautoscaling/test_application_autoscaling.py::TestAppAutoscaling::test_ecs_register_scalable_target",
            "test": "test_ecs_register_scalable_target",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ScalableTargetARN', '$..ScalableTargets..RoleARN', '$..ScalableTargets..SuspendedState']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_list_vpc",
            "test": "test_list_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_custom_origin_config_http_port_elb_integration",
            "test": "test_custom_origin_config_http_port_elb_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecr_to_blue_green_deployment",
            "test": "test_ecr_to_blue_green_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..actionExecutionDetails..output.outputVariables.ImageURI']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_elb_direct_connection_to_pod",
            "test": "test_elb_direct_connection_to_pod",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[port-and-protocol]",
            "test": "test_create_gateway_listener_with_port_or_protocol[port-and-protocol]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[port-only]",
            "test": "test_create_gateway_listener_with_port_or_protocol[port-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_gateway_listener_with_port_or_protocol[protocol-only]",
            "test": "test_create_gateway_listener_with_port_or_protocol[protocol-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-GENEVE]",
            "test": "test_create_listener_invalid_protocols[network-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-HTTPS]",
            "test": "test_create_listener_invalid_protocols[network-HTTPS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-HTTP]",
            "test": "test_create_listener_invalid_protocols[network-HTTP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[network-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[network-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-network]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-network]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_register_lambda_target_validation",
            "test": "test_elb_register_lambda_target_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_nlb_modify_attributes",
            "test": "test_nlb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'dns_record.client_routing_policy'\", \"$.._AttributesDict.'zonal_shift.config.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions0]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions1]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions2]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions3]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions4]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions5]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions6]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions6]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions7]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions7]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_create_describe_loadbalancer_rule[rule_conditions8]",
            "test": "test_create_describe_loadbalancer_rule[rule_conditions8]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_capacity_reservation",
            "test": "test_describe_capacity_reservation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_listener_attributes",
            "test": "test_describe_listener_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_non_existent_listener",
            "test": "test_describe_non_existent_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions0-modify_conditions0]",
            "test": "test_modify_rule[create_conditions0-modify_conditions0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions1-modify_conditions1]",
            "test": "test_modify_rule[create_conditions1-modify_conditions1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions2-modify_conditions2]",
            "test": "test_modify_rule[create_conditions2-modify_conditions2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_modify_rule[create_conditions3-modify_conditions3]",
            "test": "test_modify_rule[create_conditions3-modify_conditions3]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_set_rule_priorities",
            "test": "test_set_rule_priorities",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers..AvailabilityZones', '$..LoadBalancers..IpAddressType', '$..Listeners..AlpnPolicy', '$..Listeners..DefaultActions..FixedResponseConfig.MessageBody', '$..Listeners..Port', '$..Listeners..SslPolicy', '$..TargetGroups..IpAddressType', '$..TargetGroups..ProtocolVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-4566]",
            "test": "test_route53_elb_integration[port-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRoute53Integrations::test_route53_elb_integration[port-80]",
            "test": "test_route53_elb_integration[port-80]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_broker_crud",
            "test": "test_broker_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..body', '$..MaintenanceWindowStartTime', '$..Users', '$..AuthenticationStrategy', '$..AutoMinorVersionUpgrade', '$..BrokerInstances', '$..EncryptionOptions', '$..Logs', '$..Configurations', '$..EngineVersion', '$..PubliclyAccessible', '$..SecurityGroups', '$..StorageType', '$..SubnetIds', '$..EngineType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_create_tags",
            "test": "test_create_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_delete_tags",
            "test": "test_delete_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_invalid_broker",
            "test": "test_invalid_broker",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_list_brokers",
            "test": "test_list_brokers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerState', '$..EngineType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_send_to_active_mq",
            "test": "test_send_to_active_mq",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/mq/test_mq.py::TestMQ::test_send_to_activemq_curl",
            "test": "test_send_to_activemq_curl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_with_existing_vpc_security_group",
            "test": "test_create_db_instance_with_existing_vpc_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing_cfn",
            "test": "test_elb_routing_cfn",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/sagemaker/test_sagemaker.py::TestSagemaker::test_domain_user_profile_lifecycle",
            "test": "test_domain_user_profile_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private_hosted_zone",
            "test": "test_dns_namespace_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[private-invalid name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[public-invalid name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/test_network_configuration.py::test_mq",
            "test": "test_mq",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-id_manager]",
            "test": "test_create_security_group_with_custom_id[True-id_manager]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_security_group_with_custom_id[True-tag]",
            "test": "test_create_security_group_with_custom_id[True-tag]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source",
            "test": "test_rds_data_source",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventRdsDatasource::test_rds_simple",
            "test": "test_rds_simple",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_docdb.py::TestCfnDocDbResources::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment[rds_cluster.yml]",
            "test": "test_db_cluster_deployment[rds_cluster.yml]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_cluster_deployment[rds_serverless_cluster.yml]",
            "test": "test_db_cluster_deployment[rds_serverless_cluster.yml]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_instance_deployment",
            "test": "test_db_instance_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DbAddress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_rds_cluster_with_kms",
            "test": "test_rds_cluster_with_kms",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[http-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[https-only]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudfront/test_cloudfront.py::TestCloudFront::test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "test": "test_elb_triggered_by_cloudfront_with_protocol_policy[match-viewer]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db",
            "test": "test_create_query_db",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_create_query_db_with_port",
            "test": "test_create_query_db_with_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/docdb/test_docdb.py::TestDocDB::test_transactions",
            "test": "test_transactions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_awsvpc_networking",
            "test": "test_awsvpc_networking",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKS::test_invalid_k8s_versions[test]",
            "test": "test_invalid_k8s_versions[test]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAccessEntries::test_access_entry_lifecycle[iam_role]",
            "test": "test_access_entry_lifecycle[iam_role]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..deletionProtection', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..platformVersion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSAddons::test_cluster_addons_lifecycle",
            "test": "test_cluster_addons_lifecycle",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..accessConfig', '$..endpoint', '$..health', '$..identity.oidc.issuer', '$..logging', '$..tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithIngressAndLB::test_create_cluster_with_ingress_and_lb",
            "test": "test_create_cluster_with_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSClusterWithoutIngressAndLB::test_create_cluster_without_ingress_and_lb",
            "test": "test_create_cluster_without_ingress_and_lb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestEKSIAMIntegration::test_irsa",
            "test": "test_irsa",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestExtraK3SArgs::test_extra_k3s_args",
            "test": "test_extra_k3s_args",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_ecr_eks_integration",
            "test": "test_ecr_eks_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SCluster::test_elb_direct_connection_to_pod",
            "test": "test_elb_direct_connection_to_pod",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/eks/test_eks.py::TestK3SClusterRecreation::test_cluster_recreation",
            "test": "test_cluster_recreation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_modify_attributes",
            "test": "test_alb_modify_attributes",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Attributes', \"$.._AttributesDict.'access_logs.s3.enabled'\", \"$.._AttributesDict.'idle_timeout.timeout_seconds'\", \"$.._AttributesDict.'routing.http.x_amzn_tls_version_and_cipher_suite.enabled'\", \"$.._AttributesDict.'routing.http.xff_client_port.enabled'\", \"$.._AttributesDict.'routing.http.xff_header_processing.mode'\", \"$.._AttributesDict.'waf.fail_open.enabled'\"]",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_alb_set_ip_address_type",
            "test": "test_alb_set_ip_address_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..Error.Type']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[443-gateway_listen_override1-4566]",
            "test": "test_create_listener[443-gateway_listen_override1-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-None-4566]",
            "test": "test_create_listener[5555-None-4566]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener[5555-gateway_listen_override0-5555]",
            "test": "test_create_listener[5555-gateway_listen_override0-5555]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-GENEVE]",
            "test": "test_create_listener_invalid_protocols[application-GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "test": "test_create_listener_invalid_protocols[application-INVALID_PROTOCOL]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP]",
            "test": "test_create_listener_invalid_protocols[application-TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TCP_UDP]",
            "test": "test_create_listener_invalid_protocols[application-TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-TLS]",
            "test": "test_create_listener_invalid_protocols[application-TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_invalid_protocols[application-UDP]",
            "test": "test_create_listener_invalid_protocols[application-UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-and-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-port-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-port-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "test": "test_create_listener_without_port_or_protocol[missing-protocol-application]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_elb_lambda_target_permissions",
            "test": "test_elb_lambda_target_permissions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_forward_config_only_for_target_groups",
            "test": "test_forward_config_only_for_target_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[host]",
            "test": "test_internal_path_based_routing[host]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_internal_path_based_routing[path]",
            "test": "test_internal_path_based_routing[path]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..content.headers.x-amzn-trace-id', '$..content.headers.x-amzn-trace-id', '$..content.headers.x-forwarded-for', '$..content.headers.x-forwarded-port', '$..content.headers.x-forwarded-proto', '$..content.headers.accept-encoding', '$..sourceIp', '$..content.isBase64Encoded', '$..content.queryStringParameters', '$..headers.Connection', '$..headers.Content-Type', '$..headers.x-amzn-tls-cipher-suite', '$..headers.x-amzn-tls-version', '$..headers.Server', '$..headers.x-amzn-RequestId', '$..headers.x-amzn-requestid', '$..headers.X-Amzn-Trace-Id', '$..headers.x-amzn-trace-id']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_ip_target_forwarding",
            "test": "test_ip_target_forwarding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_load_balancing",
            "test": "test_load_balancing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.host', '$..headers.x-amzn-trace-id', '$..headers.x-forwarded-for', '$..headers.x-forwarded-port', '$..headers.x-forwarded-proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestELB::test_redirect_listener",
            "test": "test_redirect_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestLoadBalancer::test_describe_load_balancers",
            "test": "test_describe_load_balancers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..LoadBalancers[0].AvailabilityZones', '$..LoadBalancers[0].IpAddressType', '$..LoadBalancers[0].Scheme', '$..LoadBalancers[0].EnablePrefixForIpv6SourceNat', '$..LoadBalancers..State.Code']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[False]",
            "test": "test_host_header_rule[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_host_header_rule[True]",
            "test": "test_host_header_rule[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Conditions..HostHeaderConfig.Values', '$..Conditions..Values']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_header_rule",
            "test": "test_http_header_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_http_request_method_rule",
            "test": "test_http_request_method_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_path_pattern_rule",
            "test": "test_path_pattern_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_query_string_rule",
            "test": "test_query_string_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_rule_conditions_integration",
            "test": "test_rule_conditions_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_source_ip_rule",
            "test": "test_source_ip_rule",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elb/test_elb.py::TestRuleConditions::test_use_priority_for_listener_matching",
            "test": "test_use_priority_for_listener_matching",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_deregistration",
            "test": "test_target_group_attributes_deregistration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[GENEVE-False-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[GENEVE-False-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[GENEVE-False-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[GENEVE-False-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[GENEVE-True-app_cookie]",
            "test": "test_target_group_attributes_stickiness[GENEVE-True-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[GENEVE-True-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[GENEVE-True-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[GENEVE-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[GENEVE-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTP-False-app_cookie]",
            "test": "test_target_group_attributes_stickiness[HTTP-False-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTP-False-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[HTTP-False-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTP-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[HTTP-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTP-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[HTTP-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTP-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[HTTP-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTPS-False-app_cookie]",
            "test": "test_target_group_attributes_stickiness[HTTPS-False-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTPS-False-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[HTTPS-False-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTPS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[HTTPS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTPS-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[HTTPS-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[HTTPS-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[HTTPS-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP-False-source_ip]",
            "test": "test_target_group_attributes_stickiness[TCP-False-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP-True-app_cookie]",
            "test": "test_target_group_attributes_stickiness[TCP-True-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP-True-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[TCP-True-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[TCP-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[TCP-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP_UDP-False-source_ip]",
            "test": "test_target_group_attributes_stickiness[TCP_UDP-False-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP_UDP-True-app_cookie]",
            "test": "test_target_group_attributes_stickiness[TCP_UDP-True-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP_UDP-True-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[TCP_UDP-True-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP_UDP-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[TCP_UDP-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TCP_UDP-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[TCP_UDP-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-app_cookie]",
            "test": "test_target_group_attributes_stickiness[TLS-True-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[TLS-True-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[UDP-False-source_ip]",
            "test": "test_target_group_attributes_stickiness[UDP-False-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[UDP-True-app_cookie]",
            "test": "test_target_group_attributes_stickiness[UDP-True-app_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[UDP-True-lb_cookie]",
            "test": "test_target_group_attributes_stickiness[UDP-True-lb_cookie]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[UDP-True-source_ip_dest_ip]",
            "test": "test_target_group_attributes_stickiness[UDP-True-source_ip_dest_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[UDP-True-source_ip_dest_ip_proto]",
            "test": "test_target_group_attributes_stickiness[UDP-True-source_ip_dest_ip_proto]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_crud",
            "test": "test_target_group_crud",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[HTTP-True]",
            "test": "test_target_group_healthcheck_interval[HTTP-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[HTTPS-True]",
            "test": "test_target_group_healthcheck_interval[HTTPS-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[TCP-False]",
            "test": "test_target_group_healthcheck_interval[TCP-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[TCP_UDP-False]",
            "test": "test_target_group_healthcheck_interval[TCP_UDP-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[TLS-False]",
            "test": "test_target_group_healthcheck_interval[TLS-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_healthcheck_interval[UDP-False]",
            "test": "test_target_group_healthcheck_interval[UDP-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[GENEVE]",
            "test": "test_target_group_protocol_default_values[GENEVE]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[HTTPS]",
            "test": "test_target_group_protocol_default_values[HTTPS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[HTTP]",
            "test": "test_target_group_protocol_default_values[HTTP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[TCP]",
            "test": "test_target_group_protocol_default_values[TCP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[TCP_UDP]",
            "test": "test_target_group_protocol_default_values[TCP_UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[TLS]",
            "test": "test_target_group_protocol_default_values[TLS]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_protocol_default_values[UDP]",
            "test": "test_target_group_protocol_default_values[UDP]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_target_type_default_values[alb]",
            "test": "test_target_group_target_type_default_values[alb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_target_type_default_values[instance]",
            "test": "test_target_group_target_type_default_values[instance]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_target_type_default_values[ip]",
            "test": "test_target_group_target_type_default_values[ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_target_type_default_values[lambda]",
            "test": "test_target_group_target_type_default_values[lambda]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/fis/test_fis.py::TestFis::test_action_rds_reboot_db_instances",
            "test": "test_action_rds_reboot_db_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_cluster_with_tags",
            "test": "test_create_cluster_with_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_neo4j_cluster",
            "test": "test_create_neo4j_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.1.0.0-3.4.11-False]",
            "test": "test_create_query_db[1.1.0.0-3.4.11-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.0.1-3.5.2-False]",
            "test": "test_create_query_db[1.2.0.1-3.5.2-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[1.2.1.0-3.6.2-False]",
            "test": "test_create_query_db[1.2.1.0-3.6.2-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.7.4-False]",
            "test": "test_create_query_db[None-3.7.4-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db[None-3.7.4-True]",
            "test": "test_create_query_db[None-3.7.4-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_create_query_db_tags",
            "test": "test_create_query_db_tags",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_vertex_multi_label[False]",
            "test": "test_vertex_multi_label[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune.py::TestNeptune::test_vertex_multi_label[True]",
            "test": "test_vertex_multi_label[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[False-False]",
            "test": "test_cluster_endpoint_address[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[False-True]",
            "test": "test_cluster_endpoint_address[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[True-False]",
            "test": "test_cluster_endpoint_address[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsCrud::test_cluster_endpoint_address[True-True]",
            "test": "test_cluster_endpoint_address[True-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMariaDB::test_create_mariadb",
            "test": "test_create_mariadb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMssql::test_create_mssql",
            "test": "test_create_mssql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db[provisioned-8.0.mysql_aurora.3.04.0]",
            "test": "test_create_aurora_db[provisioned-8.0.mysql_aurora.3.04.0]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBParameterGroups..DBParameterGroupName', '$..Endpoint', '$..Port', '$..PreferredMaintenanceWindow', '$..ReaderEndpoint', '$..StatusInfos', '$..StorageType', '$..StorageEncrypted', '$..DatabaseName', '$..DbInstancePort', '$..DBName', '$..EnabledCloudwatchLogsExports', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..CopyTagsToSnapshot', '$..ClusterCreateTime', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..AllocatedStorage', '$..BackupTarget', '$..CACertificateIdentifier', '$..CertificateDetails', '$..CustomerOwnedIpEnabled', '$..DBName', '$..DedicatedLogVolume', '$..MonitoringInterval', '$..NetworkType', '$..OptionGroupMemberships..OptionGroupName', '$..PendingModifiedValues', '$..StorageThroughput', '$..PerformanceInsightsKMSKeyId', '$..LocalWriteForwardingStatus', '$..AvailabilityZone', '$..LicenseModel', '$..PubliclyAccessible']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db[serverless-5.7.mysql_aurora.2.11.4]",
            "test": "test_create_aurora_db[serverless-5.7.mysql_aurora.2.11.4]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBParameterGroups..DBParameterGroupName', '$..Endpoint', '$..Port', '$..PreferredMaintenanceWindow', '$..ReaderEndpoint', '$..StatusInfos', '$..StorageType', '$..StorageEncrypted', '$..DatabaseName', '$..DbInstancePort', '$..DBName', '$..EnabledCloudwatchLogsExports', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..CopyTagsToSnapshot', '$..ClusterCreateTime', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..AllocatedStorage', '$..BackupTarget', '$..CACertificateIdentifier', '$..CertificateDetails', '$..CustomerOwnedIpEnabled', '$..DBName', '$..DedicatedLogVolume', '$..MonitoringInterval', '$..NetworkType', '$..OptionGroupMemberships..OptionGroupName', '$..PendingModifiedValues', '$..StorageThroughput', '$..PerformanceInsightsKMSKeyId', '$..LocalWriteForwardingStatus', '$..AvailabilityZone', '$..LicenseModel', '$..PubliclyAccessible']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_aurora_db_invalid_version",
            "test": "test_create_aurora_db_invalid_version",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[False-5.7.39-MariaDB]",
            "test": "test_create_mysql[False-5.7.39-MariaDB]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_create_mysql[True-8.0.30-MySQL Community Server]",
            "test": "test_create_mysql[True-8.0.30-MySQL Community Server]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsMysql::test_delete_db_parameters_in_use",
            "test": "test_delete_db_parameters_in_use",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_cluster",
            "test": "test_add_role_to_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_add_role_to_db_instance",
            "test": "test_add_role_to_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster",
            "test": "test_create_aurora_v2_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..StorageType', '$..AvailabilityZone', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_delete_instances",
            "test": "test_create_aurora_v2_cluster_delete_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..delete_db_cluster.DBCluster.DBClusterMembers', '$..delete_db_cluster.DBCluster.Status', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_v2_cluster_reboot_instances",
            "test": "test_create_aurora_v2_cluster_reboot_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..AllocatedStorage', '$..DBParameterGroups', '$..StorageType', '$..EngineVersion', '$..AvailabilityZone', '$..PromotionTier', '$..StorageThroughput', '$..CertificateDetails', '$..DedicatedLogVolume', '$.reboot-db-instance.DBInstance.DBInstanceStatus', '$..DBInstance.IAMDatabaseAuthenticationEnabled', '$..DBInstance.MultiAZ', '$..DBInstance.OptionGroupMemberships', '$..DBInstance.StorageEncrypted', '$..DBInstance.TagList', '$..DBInstance.DbiResourceId', '$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_db_custom_port",
            "test": "test_create_db_custom_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-database-name]",
            "test": "test_create_postgres[default-database-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-username]",
            "test": "test_create_postgres[default-username]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[no-special-values]",
            "test": "test_create_postgres[no-special-values]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_cluster",
            "test": "test_create_snapshot_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_snapshot_instance",
            "test": "test_create_snapshot_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_already_exists",
            "test": "test_db_cluster_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_endpoints",
            "test": "test_db_cluster_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_scaling",
            "test": "test_db_cluster_scaling",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_cluster_start_stop",
            "test": "test_db_cluster_start_stop",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseInsightsMode', '$..DatabaseName', '$..EngineLifecycleSupport', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..AutomaticRestartTime', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_instance_already_exists",
            "test": "test_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_db_proxies",
            "test": "test_db_proxies",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_describe_db_instance_filters",
            "test": "test_describe_db_instance_filters",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_grant_rds_iam_query_with_quote",
            "test": "test_grant_rds_iam_query_with_quote",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_cluster",
            "test": "test_modify_db_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_db_parametergroup_named_default",
            "test": "test_postgres_db_parametergroup_named_default",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[13.15]",
            "test": "test_postgres_versions[13.15]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[16.1]",
            "test": "test_postgres_versions[16.1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_postgres_versions[17.5]",
            "test": "test_postgres_versions[17.5]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_reboot_db_multiple_instances",
            "test": "test_reboot_db_multiple_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_serverless_no_custom_cluster_endpoint",
            "test": "test_serverless_no_custom_cluster_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..AutoMinorVersionUpgrade', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..Capacity', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DBSubnetGroup', '$..DeletionProtection', '$..DomainMemberships', '$..EarliestRestorableTime', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..KmsKeyId', '$..LatestRestorableTime', '$..NetworkType', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..ScalingConfigurationInfo', '$..DBClusterParameterGroup', '$..StorageEncrypted', '$..DatabaseName']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresCrossAccount::test_create_restore_snapshot_cluster_cross_account",
            "test": "test_create_restore_snapshot_cluster_cross_account",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgresCrossAccount::test_create_restore_snapshot_instance_cross_account",
            "test": "test_create_restore_snapshot_instance_cross_account",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_cluster_with_instances",
            "test": "test_reset_cluster_with_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mariadb]",
            "test": "test_reset_db_instance[mariadb]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[mysql]",
            "test": "test_reset_db_instance[mysql]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsReset::test_reset_db_instance[sqlserver-se]",
            "test": "test_reset_db_instance[sqlserver-se]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_already_exists",
            "test": "test_create_db_instance_already_exists",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_manage_master_user_password",
            "test": "test_create_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus', '$..ARN', '$..KmsKeyId', '$..LastRotatedDate', '$..Name', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_mysql",
            "test": "test_create_db_instance_mysql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_postgres",
            "test": "test_create_db_instance_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..VpcSecurityGroups']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_create_db_instance_tagging",
            "test": "test_create_db_instance_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_skip_final_snapshot",
            "test": "test_delete_db_instance_skip_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_with_deletion_protection",
            "test": "test_delete_db_instance_with_deletion_protection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_describe_db_instance_in_cluster",
            "test": "test_describe_db_instance_in_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_describe_db_instance_tagging",
            "test": "test_describe_db_instance_tagging",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance",
            "test": "test_modify_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_db_parameter_group_not_found",
            "test": "test_modify_db_instance_db_parameter_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password",
            "test": "test_modify_db_instance_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..AllocatedStorage', '$..StorageType', '$..MasterUserSecret.SecretStatus']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_manage_master_user_password_invalid",
            "test": "test_modify_db_instance_manage_master_user_password_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_option_group_not_found",
            "test": "test_modify_db_instance_option_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_rename",
            "test": "test_modify_db_instance_rename",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_db_instance_vpc_security_group_not_found",
            "test": "test_modify_db_instance_vpc_security_group_not_found",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_modify_instance_port",
            "test": "test_modify_instance_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_reboot_db_instance",
            "test": "test_reboot_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_start_stop_db_instance",
            "test": "test_start_stop_db_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DBName', '$..DBInstanceStatus', '$..AvailabilityZone', '$..Endpoint', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password",
            "test": "test_create_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages', '$..KeyMetadata.KeyManager']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_create_db_cluster_manage_master_user_password_with_kms_key",
            "test": "test_create_db_cluster_manage_master_user_password_with_kms_key",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status', '$..KmsKeyId', '$..LastRotatedDate', '$..NextRotationDate', '$..RotationEnabled', '$..RotationRules', '$..VersionIdsToStages']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_cluster_port",
            "test": "test_modify_cluster_port",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password",
            "test": "test_modify_db_cluster_manage_master_user_password",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ActivityStreamStatus', '$..AvailabilityZones', '$..BackupRetentionPeriod', '$..ClusterCreateTime', '$..CopyTagsToSnapshot', '$..CrossAccountClone', '$..DeletionProtection', '$..EarliestRestorableTime', '$..EngineMode', '$..HostedZoneId', '$..HttpEndpointEnabled', '$..LatestRestorableTime', '$..PreferredBackupWindow', '$..PreferredMaintenanceWindow', '$..ReadReplicaIdentifiers', '$..DBClusterMembers..IsClusterWriter', '$..DBClusterParameterGroup', '$..Port', '$..ActivityStreamStatus', '$..AssociatedRoles', '$..BackupTarget', '$..CACertificateIdentifier', '$..CustomerOwnedIpEnabled', '$..DBSubnetGroup', '$..DomainMemberships', '$..MonitoringInterval', '$..CertificateDetails', '$..StorageThroughput', '$..NetworkType', '$..PendingModifiedValues', '$..PerformanceInsightsEnabled', '$..Endpoint.HostedZoneId', '$..LatestRestorableTime', '$..PubliclyAccessible', '$..AutoMinorVersionUpgrade', '$..OptionGroupName', '$..DbInstancePort', '$..LicenseModel', '$..InstanceCreateTime', '$..StatusInfos', '$..EnabledCloudwatchLogsExports', '$..DatabaseInsightsMode', '$..DedicatedLogVolume', '$..EngineLifecycleSupport', '$..IsStorageConfigUpgradeAvailable', '$..DatabaseName', '$..MasterUserSecret.SecretStatus', '$..Endpoint', '$..EngineVersion', '$..LocalWriteForwardingStatus', '$..Status']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDbCluster::test_modify_db_cluster_manage_master_user_password_invalid",
            "test": "test_modify_db_cluster_manage_master_user_password_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[False-False]",
            "test": "test_create_db_snapshot[False-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[False-True]",
            "test": "test_create_db_snapshot[False-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[True-False]",
            "test": "test_create_db_snapshot[True-False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot[True-True]",
            "test": "test_create_db_snapshot[True-True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_create_db_snapshot_mysql",
            "test": "test_create_db_snapshot_mysql",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_delete_db_snapshot_success",
            "test": "test_delete_db_snapshot_success",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshot.DedicatedLogVolume', '$..DBSnapshot.LicenseModel', '$..DBSnapshot.OptionGroupName', '$..DBSnapshot.PercentProgress', '$..DBSnapshot.SnapshotCreateTime', '$..DBSnapshot.Status', '$..DBSnapshot.VpcId', '$..DBSnapshot.OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSSnapshot::test_describe_db_snapshot_filter_by_instance",
            "test": "test_describe_db_snapshot_filter_by_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBSnapshots..DedicatedLogVolume', '$..DBSnapshots..LicenseModel', '$..DBSnapshots..OptionGroupName', '$..DBSnapshots..VpcId', '$..DBSnapshots..TagList', '$..DBSnapshots..ProcessorFeatures', '$..DBSnapshots..MultiTenant', '$..DBSnapshots..OriginalSnapshotCreateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[True]",
            "test": "test_data_api[True]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgres::test_max_connections",
            "test": "test_max_connections",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_read_write",
            "test": "test_global_cluster_read_write",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalCluster::test_global_cluster_remove_instances_from_cluster",
            "test": "test_global_cluster_remove_instances_from_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_invalid_secondary_cluster",
            "test": "test_invalid_secondary_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_promote_secondary_headless",
            "test": "test_promote_secondary_headless",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[dot]",
            "test": "test_elb_routing[dot]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/route53/test_route53.py::test_elb_routing[nothing]",
            "test": "test_elb_routing[nothing]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "VpcIds": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/api/test_stacks.py::TestStacksApi::test_stack_description_special_chars",
            "test": "test_stack_description_special_chars",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/aws_ec2_networkacl/test_basic.py::TestBasicCRD::test_black_box",
            "test": "test_black_box",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..NetworkAcls..Entries', '$..NetworkAcls..Tags', '$..NetworkAcls..Tags..Key', '$..NetworkAcls..Tags..Value', '$..NetworkAcls..VpcId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resource_providers/ec2/test_ec2_resource_provider.py::test_deploy_vpc_endpoint",
            "test": "test_deploy_vpc_endpoint",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DnsEntries', '$..Groups', '$..NetworkInterfaceIds', '$..SubnetIds']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_security_group_id_with_vpc",
            "test": "test_ec2_security_group_id_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation",
            "test": "test_simple_route_table_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_simple_route_table_creation_without_vpc",
            "test": "test_simple_route_table_creation_without_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_with_route_table",
            "test": "test_vpc_with_route_table",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RouteTables..PropagatingVgws', '$..RouteTables..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_vpc_with_custom_id",
            "test": "test_create_vpc_with_custom_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/lambda_/test_lambda_api.py::TestLambdaFunction::test_vpc_config",
            "test": "test_vpc_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6AllowedForDualStack']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_associate_vpc_with_hosted_zone",
            "test": "test_associate_vpc_with_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_create_private_hosted_zone",
            "test": "test_create_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HostedZone.CallerReference', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/route53/test_route53.py::TestRoute53::test_create_hosted_zone_in_non_existent_vpc",
            "test": "test_create_hosted_zone_in_non_existent_vpc",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/batch/test_batch_compute_environments.py::TestBatchComputeEnvironmentCRUD::test_create_compute_environment_invalid_security_groups",
            "test": "test_create_compute_environment_invalid_security_groups",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_securitygroup.py::test_security_group_read_with_vpc",
            "test": "test_security_group_read_with_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ResourceDescription.Properties.SecurityGroupIngress']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc",
            "test": "test_read_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_route53/test_route53_hostedzone.py::test_read_hosted_zone_private",
            "test": "test_read_hosted_zone_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_apigateway.py::test_vpc_link",
            "test": "test_vpc_link",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackId', '$..DriftInformation', '$..Metadata', '$..description', '$..name', '$..statusMessage', '$..tags', '$..targetArns']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_efs.py::test_file_system_deployment",
            "test": "test_file_system_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..FileSystems..Name', '$..FileSystems..ProvisionedThroughputInMibps', '$..FileSystems..SizeInBytes.Timestamp', '$..FileSystems..SizeInBytes.Value', '$..FileSystems..SizeInBytes.ValueInArchive', '$..FileSystems..SizeInBytes.ValueInStandard', '$..FileSystems..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cache_cluster[redis]",
            "test": "test_cache_cluster[redis]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PhysicalResourceId', '$..CacheClusters']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_mwaa.py::test_mwaa_environment",
            "test": "test_mwaa_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Environment.CeleryExecutorQueue', '$..Environment.DatabaseVpcEndpointService', '$..Environment.EndpointManagement', '$..Environment.EnvironmentClass', '$..Environment.LastUpdate', '$..Environment.LoggingConfiguration', '$..Environment.MaxWebservers', '$..Environment.MaxWorkers', '$..Environment.MinWebservers', '$..Environment.MinWorkers', '$..Environment.Schedulers', '$..Environment.ServiceRoleArn', '$..Environment.Tags', '$..Environment.WebserverAccessMode', '$..Environment.WebserverVpcEndpointService', '$..Environment.WeeklyMaintenanceWindowStart', '$..EnvCeleryExecutorQueue', '$..EnvCloudWatchLogGroupArn', '$..EnvDatabaseVpcEndpointService', '$..EnvWebserverVpcEndpoint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_associate_multiple_vpcs_to_hosted_zone",
            "test": "test_associate_multiple_vpcs_to_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_private_hostedzone",
            "test": "test_private_hostedzone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/codepipeline/test_codepipeline.py::TestCodePipeline::test_ecs_standard_deployment",
            "test": "test_ecs_standard_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..pipelineExecution.artifactRevisions', '$..pipelineExecution.trigger.triggerDetail', '$..pipelineExecutionSummaries..sourceRevisions', '$..pipelineExecutionSummaries..trigger', '$..actionExecutionDetails..output.executionResult.externalExecutionId', '$..actionExecutionDetails..output.outputVariables.AuthorDisplayName', '$..actionExecutionDetails..output.outputVariables.AuthorEmail', '$..actionExecutionDetails..output.outputVariables.AuthorId', '$..actionExecutionDetails..output.outputVariables.ProviderType', '$..actionExecutionDetails..updatedBy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/events/test_events_targets.py::TestEventsTargetECS::test_put_events_with_target_ecs",
            "test": "test_put_events_with_target_ecs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..imageDigest', '$..managedAgents', '$..name', '$..networkInterfaces', '$..runtimeId', '$..attachments..details', '$..attachments..details..value', '$..attachments..status', '$..availabilityZone', '$..enableExecuteCommand', '$..executionStoppedAt', '$..group', '$..overrides.containerOverrides', '$..overrides.inferenceAcceleratorOverrides', '$..startedBy', '$..version', '$..fargateEphemeralStorage', '$..desiredStatus', '$..lastStatus', '$..stoppedReason', '$..stoppedAt', '$..stopCode']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private_hosted_zone",
            "test": "test_dns_namespace_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[private-invalid name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[arn]",
            "test": "test_subnets_replication[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_subnets_replication.py::test_subnets_replication[identifier]",
            "test": "test_subnets_replication[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EnableDns64', '$..PrivateDnsNameOptionsOnLaunch', '$..State', '$.source-subnet.Tags', '$.replicated-subnet.AvailabilityZoneId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[arn]",
            "test": "test_replicate_vpc[arn]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/ec2/test_vpc_replication.py::test_replicate_vpc[identifier]",
            "test": "test_replicate_vpc[identifier]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/integration/replicator/services/route53/test_route53_replication.py::TestHostedZoneReplication::test_replication_private_zone",
            "test": "test_replication_private_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/services/test_ec2/test_cloudcontrol_vpc.py::test_read_vpc_not_found",
            "test": "test_read_vpc_not_found",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudcontrol/test_cloudcontrol_apl.py::TestCloudControlApiCredentials::test_with_account_and_region",
            "test": "test_with_account_and_region",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ram/test_ram.py::TestResourceAccessManager::test_subnet_sharing",
            "test": "test_subnet_sharing",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "DescribeVpnGateways": {
      "Filters": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DetachInternetGateway": {
      "InternetGatewayId, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_tables",
            "test": "test_cfn_with_multiple_route_tables",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_internet_gateway_ref_and_attr",
            "test": "test_internet_gateway_ref_and_attr",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DriftInformation', '$..Metadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_gateway_attachment",
            "test": "test_vpc_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DetachVpnGateway": {
      "VpcId, VpnGatewayId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_describe_vpn_gateways_filter_by_vpc",
            "test": "test_describe_vpn_gateways_filter_by_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AmazonSideAsn', '$..AvailabilityZone', '$..Tags']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DisassociateRouteTable": {
      "AssociationId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_cfn_with_multiple_route_table_associations",
            "test": "test_cfn_with_multiple_route_table_associations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws', '$..Tags', '$..Tags..Key', '$..Tags..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_create_route_table_association",
            "test": "test_create_route_table_association",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..PropagatingVgws']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_cdc_replication_task_multiple_tables[unformatted_json]",
            "test": "test_cdc_replication_task_multiple_tables[unformatted_json]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_profile_without_subnets",
            "test": "test_eks_fargate_profile_without_subnets",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile.subnets']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eks_fargate_cluster",
            "test": "test_eks_fargate_cluster",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..cluster.accessConfig', '$..cluster.endpoint', '$..cluster.health', '$..cluster.kubernetesNetworkConfig.serviceIpv4Cidr', '$..cluster.logging', '$..cluster.platformVersion', '$..cluster.tags', '$..cluster.deletionProtection', '$..fargateProfile.health', '$..fargateProfile.selectors', '$..fargateProfile..labels']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "DisassociateVpcCidrBlock": {
      "AssociationId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_cidr_block_configurations",
            "test": "test_vpc_cidr_block_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2::test_associate_and_disassociate_vpc_cidr_block",
            "test": "test_associate_and_disassociate_vpc_cidr_block",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Ipv6CidrBlockAssociation.Ipv6CidrBlock', '$..Ipv6CidrBlockAssociation.Ipv6Pool', '$..Ipv6CidrBlockAssociation.NetworkBorderGroup']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetSecurityGroupsForVpc": {
      "VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_get_security_groups_for_vpc",
            "test": "test_get_security_groups_for_vpc",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Vpc.IsDefault', '$..Vpc.DhcpOptionsId', '$..Vpc.State']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ImportKeyPair": {
      "KeyName, PublicKeyMaterial": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_keypair_create_import",
            "test": "test_keypair_create_import",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..ImportedKeyPairFingerprint']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[alpine-3.20]",
            "test": "test_ssh_key_pairs[alpine-3.20]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2023]",
            "test": "test_ssh_key_pairs[amazonlinux-2023]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2]",
            "test": "test_ssh_key_pairs[amazonlinux-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[ubuntu-22.04]",
            "test": "test_ssh_key_pairs[ubuntu-22.04]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifyInstanceAttribute": {
      "Attribute, InstanceId, Value": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifyLaunchTemplate": {
      "ClientToken, DefaultVersion, LaunchTemplateId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[id]",
            "test": "test_modify_launch_template[id]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_modify_launch_template[name]",
            "test": "test_modify_launch_template[name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::test_raise_modify_to_invalid_default_version",
            "test": "test_raise_modify_to_invalid_default_version",
            "response": "400",
            "error": "InvalidLaunchTemplateIdError",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ModifySubnetAttribute": {
      "MapPublicIpOnLaunch, SubnetId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_transit_gateway_attachment",
            "test": "test_transit_gateway_attachment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Tags', '$..Options.AssociationDefaultRouteTableId', '$..Options.PropagationDefaultRouteTableId', '$..Options.TransitGatewayCidrBlocks', '$..Options.SecurityGroupReferencingSupport']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Community: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_creates_default_sg",
            "test": "test_vpc_creates_default_sg",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_s3_kinesis/test_dms.py::TestDmsScenario::test_describe_endpoints",
            "test": "test_describe_endpoints",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_resource_replication_config",
            "test": "test_resource_replication_config",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..describe_replication_config.ReplicationConfigs..ReplicationConfigUpdateTime']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_public_alb",
            "test": "test_public_alb",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_docdb_connection",
            "test": "test_docdb_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_validate_ready",
            "test": "test_validate_ready",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_deployed_compute_environment",
            "test": "test_deployed_compute_environment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..computeResources', '$..containerOrchestrationType', '$..serviceRole', '$..statusReason', '$..tags', '$..uuid', '$..ecsClusterArn']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_vpc_endpoint_service_configurations",
            "test": "test_vpc_endpoint_service_configurations",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::TestElasticacheResources::test_resource_deployment",
            "test": "test_resource_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticache.py::test_cluster_with_replication",
            "test": "test_cluster_with_replication",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_rds.py::test_db_proxy",
            "test": "test_db_proxy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/test_api.py::TestAPI::test_create_misc_resources",
            "test": "test_create_misc_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..HomeRegion', '$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterParameterGroup', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DatabaseName', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..EngineVersion', '$..DBClusters..EngineVersion', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_listener_services_are_accessible_and_returning_expected_content",
            "test": "test_listener_services_are_accessible_and_returning_expected_content",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_provider_marked_running",
            "test": "test_provider_marked_running",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_batch_execute_statement_setup[postgres-v1]",
            "test": "test_batch_execute_statement_setup[postgres-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_data_api[False]",
            "test": "test_data_api[False]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_select_char",
            "test": "test_select_char",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_validate_initial_setup",
            "test": "test_validate_initial_setup",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBClusterMembers..PromotionTier', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..TagList', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_postgres_s3_extension_helpers[12]",
            "test": "test_postgres_s3_extension_helpers[12]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_invalid",
            "test": "test_batch_invalid",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_request_response",
            "test": "test_batch_request_response",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_sync",
            "test": "test_batch_sync",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "ModifyVpcAttribute": {
      "EnableDnsHostnames, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "EnableDnsSupport, VpcId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_vpc_endpoint_dns_names",
            "test": "test_vpc_endpoint_dns_names",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Groups', '$..ServiceRegion']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ],
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/kafka/test_kafka.py::TestKafka::test_kafka_event_source_mapping_single_topic",
            "test": "test_kafka_event_source_mapping_single_topic",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..BrokerNodeGroupInfo.ConnectivityInfo', '$..BrokerNodeGroupInfo.StorageInfo', '$..CurrentBrokerSoftwareInfo', '$..CustomerActionStatus', '$..CurrentVersion', '$..EncryptionInfo', '$..EnhancedMonitoring', '$..OpenMonitoring', '$..StorageMode', '$..Tags', '$..BootstrapBrokerString', '$..bootstrapServers', '$..LastProcessingResult', '$..StateTransitionReason']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "PurchaseReservedInstancesOffering": {
      "InstanceCount, LimitPrice, ReservedInstancesOfferingId": {
        "ls_community": [
          {
            "node_id": "LocalStack Community: tests/aws/services/ec2/test_ec2.py::TestEc2Integrations::test_reserved_instance_api",
            "test": "test_reserved_instance_api",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "RebootInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "ReleaseAddress": {
      "AllocationId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecr.py::test_untransformed_url_when_no_repository_created",
            "test": "test_untransformed_url_when_no_repository_created",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elbv2/test_elbv2_target_groups.py::TestElbV2TargetGroups::test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "test": "test_target_group_attributes_stickiness[TLS-True-source_ip]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_api.py::TestRDSDBInstanceCRUD::test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "test": "test_delete_db_instance_allow_deleting_instance_on_cluster_without_final_snapshot",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "AllocationId, PublicIp": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/kinesis_firehose_redshift/test_kinesis_firehose_redshift.py::TestKinesisFirehoseScenario::test_kinesis_firehose_redshift",
            "test": "test_kinesis_firehose_redshift",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_autoscaling.py::test_autoscaling_group",
            "test": "test_autoscaling_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..AutoScalingGroups..AvailabilityZones', '$..AutoScalingGroups..CapacityRebalance', '$..AutoScalingGroups..EnabledMetrics', '$..AutoScalingGroups..HealthCheckGracePeriod', '$..AutoScalingGroups..Tags', '$..AutoScalingGroups..TrafficSources']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_batch.py::TestBatch::test_submit_job",
            "test": "test_submit_job",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_capacity_providers",
            "test": "test_capacity_providers",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..StackResourceDetail.PhysicalResourceId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_redshift.py::TestCfnRedshiftSubnet::test_docdb_resources",
            "test": "test_docdb_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_route53.py::test_record_set_with_alias_record",
            "test": "test_record_set_with_alias_record",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..StackResourceDetail.Metadata', '$..MaxItems', '$..AliasTarget.DNSName', '$..ResourceRecordSets..Name', '$..ResourceRecordSets..ResourceRecords..Value']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_secretsmanager.py::test_secretsmanager_target_attachment_maridab",
            "test": "test_secretsmanager_target_attachment_maridab",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackConfigFile::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFirelensStackFluentD::test_log_emission",
            "test": "test_log_emission",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsNetworkLoadBalancedTargetGroupsFargate::test_port_connection",
            "test": "test_port_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsQueueProccesingPattern::test_queue_proccessing",
            "test": "test_queue_proccessing",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/elasticache/test_elasticache_redis.py::TestCacheCluster::test_redis_connection",
            "test": "test_redis_connection",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMultiEngine::test_column_metadata_for_mysql[mysql-v1]",
            "test": "test_column_metadata_for_mysql[mysql-v1]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..columnMetadata..precision', '$..columnMetadata..type', '$..records..booleanValue', '$..records..longValue', '$..numberOfRecordsUpdated']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraMysql::test_bool_and_int_values_handled_properly",
            "test": "test_bool_and_int_values_handled_properly",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_data.py::TestAuroraPostgresCfn::test_number_of_records_updated[update-with-ctes]",
            "test": "test_number_of_records_updated[update-with-ctes]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_global.py::TestGlobalClusterCDK::test_failover",
            "test": "test_failover",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..DBClusters..ActivityStreamStatus', '$..DBClusters..AssociatedRoles', '$..DBClusters..AutoMinorVersionUpgrade', '$..DBClusters..AvailabilityZones', '$..DBClusters..BackupRetentionPeriod', '$..DBClusters..ClusterCreateTime', '$..DBClusters..CopyTagsToSnapshot', '$..DBClusters..CrossAccountClone', '$..DBClusters..DBSubnetGroup', '$..DBClusters..DeletionProtection', '$..DBClusters..DomainMemberships', '$..DBClusters..EarliestRestorableTime', '$..DBClusters..EngineMode', '$..DBClusters..GlobalWriteForwardingRequested', '$..DBClusters..HostedZoneId', '$..DBClusters..HttpEndpointEnabled', '$..DBClusters..LatestRestorableTime', '$..DBClusters..NetworkType', '$..DBClusters..PreferredBackupWindow', '$..DBClusters..PreferredMaintenanceWindow', '$..DBClusters..ReadReplicaIdentifiers', '$..DBClusters..DatabaseInsightsMode', '$..DBClusters..EngineLifecycleSupport', '$..GlobalClusters..Endpoint', '$..GlobalClusters..EngineLifecycleSupport', '$..GlobalClusters..TagList', '$..GlobalCluster.Endpoint', '$..GlobalCluster.EngineLifecycleSupport', '$..GlobalCluster.TagList']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/stepfunctions/test_batch_integration.py::TestBatchIntegration::test_batch_failure",
            "test": "test_batch_failure",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..tracingConfiguration', '$..SdkHttpMetadata', '$..SdkResponseMetadata']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_elasticloadbalancingv2.py::test_elbv2_loadbalancer_resource",
            "test": "test_elbv2_loadbalancer_resource",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..StackResourceDetail.DriftInformation', '$..StackResourceDetail.Metadata', '$..LoadBalancerAddresses', '$..DNSName', '$..SecurityGroupsOutput', '$..AlpnPolicy', '$..DefaultActions..ForwardConfig', '$..Port', '$..SslPolicy', '$..LoadBalancerArns', '$..Error.Code', '$..Error.Message']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "RevokeSecurityGroupEgress": {
      "GroupId, SecurityGroupRuleIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "RevokeSecurityGroupIngress": {
      "GroupId, IpPermissions": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source",
            "test": "test_rds_data_source",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_data_source.py::TestAppsyncRDSDataSource::test_rds_data_source_rds_utils",
            "test": "test_rds_data_source_rds_utils",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/appsync/test_appsync_event_code_executor.py::TestAppsyncEventRdsDatasource::test_rds_simple",
            "test": "test_rds_simple",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_aurora_postgres",
            "test": "test_create_aurora_postgres",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-database-name]",
            "test": "test_create_postgres[default-database-name]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[default-username]",
            "test": "test_create_postgres[default-username]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_create_postgres[no-special-values]",
            "test": "test_create_postgres[no-special-values]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_generate_db_auth_token",
            "test": "test_generate_db_auth_token",
            "response": "200",
            "error": "",
            "snapshot_skipped": "all",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_grant_rds_iam_query_with_quote",
            "test": "test_grant_rds_iam_query_with_quote",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_iam_db_token_auth_from_lambda",
            "test": "test_iam_db_token_auth_from_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_modify_db_instance_with_db_parameter_group",
            "test": "test_modify_db_instance_with_db_parameter_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds.py::TestRdsPostgres::test_query_from_s3",
            "test": "test_query_from_s3",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "GroupId, SecurityGroupRuleIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_aurora_postgres_kinesis/test_dms.py::TestDmsScenario::test_replication_task_without_identifier",
            "test": "test_replication_task_without_identifier",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..RecoveryTimeout', '$..DataMaskingErrorPolicy']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_mariadb_kinesis/test_dms.py::TestDmsScenario::test_cdc_table_rules_filter",
            "test": "test_cdc_table_rules_filter",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..EncryptionType']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/dms_serverless/test_dms_serverless.py::TestDmsScenario::test_vpc_endpoints[without-kinesis-streams]",
            "test": "test_vpc_endpoints[without-kinesis-streams]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/fargate_prometheus/test_fargate_prometheus.py::TestFargatePrometheus::test_private_http_api_integration",
            "test": "test_private_http_api_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/scenario/rds_neptune_docdb/test_rds_neptune_docdb.py::TestRdsNeptuneDocDB::test_rds_lambda",
            "test": "test_rds_lambda",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_alb_fargate_integration.py::TestAlbFargateIntegration::test_gzip_encoding",
            "test": "test_gzip_encoding",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..headers.server', '$..json.headers.Connection', '$..json.headers.Forwarded', '$..json.headers.Via', '$..json.headers.X-Forwarded-For', '$..json.headers.X-Forwarded-Port', '$..json.headers.X-Forwarded-Proto']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_ec2_rules_valid_port_types",
            "test": "test_ec2_rules_valid_port_types",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroupRuleArn', '$..GroupOwnerId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_ecs_alb_apigateway_integration",
            "test": "test_ecs_alb_apigateway_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_patterns.py::TestEcsFargateApplicationLoadBalanced::test_service_deployment",
            "test": "test_service_deployment",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestDurableStorageSample::test_listener",
            "test": "test_listener",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs_samples.py::TestSharedResourcesSample::test_deployed_resources",
            "test": "test_deployed_resources",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/neptune/test_neptune_cfn.py::TestNeptuneCfn::test_neptune_iam_with_http_protocol",
            "test": "test_neptune_iam_with_http_protocol",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/rds/test_rds_postgres_extensions.py::TestRdsPostgresExtensions::test_extensions_in_different_db_name[16]",
            "test": "test_extensions_in_different_db_name[16]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$.pg-extensions.results']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_deploy_duplicate_security_group",
            "test": "test_deploy_duplicate_security_group",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation",
            "test": "test_security_group_ingress_creation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ec2.py::test_security_group_ingress_creation_isolation",
            "test": "test_security_group_ingress_creation_isolation",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_ecs.py::test_create_service_with_code_deploy",
            "test": "test_create_service_with_code_deploy",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/cloudformation/resources/test_eks.py::test_eksctl_stack",
            "test": "test_eksctl_stack",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "['$..SecurityGroup', '$..ServiceRoleARN', '$..NodeGroupId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestTaskExecution::test_create_service_run_task",
            "test": "test_create_service_run_task",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      }
    },
    "RunInstances": {
      "BlockDeviceMappings, ClientToken, ImageId, MaxCount, MinCount, UserData": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_create_instance_with_ebs_create_fs",
            "test": "test_create_instance_with_ebs_create_fs",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, InstanceType, MaxCount, MinCount": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_id",
            "test": "test_ami_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_launch_index",
            "test": "test_ami_launch_index",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_imdsv2_ttl",
            "test": "test_imdsv2_ttl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_id",
            "test": "test_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_identity_document",
            "test": "test_instance_identity_document",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_type",
            "test": "test_instance_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_hostname",
            "test": "test_local_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_ipv4",
            "test": "test_local_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_metadata_categories",
            "test": "test_metadata_categories",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_hostname",
            "test": "test_public_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_ipv4",
            "test": "test_public_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_versions",
            "test": "test_versions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, KeyName, MaxCount, MinCount": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[alpine-3.20]",
            "test": "test_ssh_key_pairs[alpine-3.20]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2023]",
            "test": "test_ssh_key_pairs[amazonlinux-2023]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[amazonlinux-2]",
            "test": "test_ssh_key_pairs[amazonlinux-2]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_ssh_key_pairs[ubuntu-22.04]",
            "test": "test_ssh_key_pairs[ubuntu-22.04]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, MaxCount, MinCount": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_describe_instances",
            "test": "test_describe_instances",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestEcsDocker::test_start_and_stop_task[start_task]",
            "test": "test_start_and_stop_task[start_task]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_cancel_command",
            "test": "test_cancel_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_custom_documents",
            "test": "test_custom_documents",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information",
            "test": "test_describe_instance_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information_filtered_by_instance_id",
            "test": "test_describe_instance_information_filtered_by_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_send_command",
            "test": "test_send_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_run_invalid_image",
            "test": "test_run_invalid_image",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      },
      "ClientToken, ImageId, MaxCount, MinCount, UserData": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_instance_metadata_service",
            "test": "test_instance_metadata_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "StartInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_stop_start_terminate_instances_for_invalid_instance_id_raises[start_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[start_instances]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "StopInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_user_data",
            "test": "test_user_data",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_stop_start_terminate_instances_for_invalid_instance_id_raises[stop_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[stop_instances]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    },
    "TerminateInstances": {
      "InstanceIds": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_moto_fallback",
            "test": "test_moto_fallback",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_id",
            "test": "test_ami_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_ami_launch_index",
            "test": "test_ami_launch_index",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_imdsv2_ttl",
            "test": "test_imdsv2_ttl",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_id",
            "test": "test_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_identity_document",
            "test": "test_instance_identity_document",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_instance_type",
            "test": "test_instance_type",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_hostname",
            "test": "test_local_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_local_ipv4",
            "test": "test_local_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_metadata_categories",
            "test": "test_metadata_categories",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_hostname",
            "test": "test_public_hostname",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_public_ipv4",
            "test": "test_public_ipv4",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2_imds.py::TestEC2IMDSServer::test_versions",
            "test": "test_versions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_cancel_command",
            "test": "test_cancel_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_custom_documents",
            "test": "test_custom_documents",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information",
            "test": "test_describe_instance_information",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_describe_instance_information_filtered_by_instance_id",
            "test": "test_describe_instance_information_filtered_by_instance_id",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ssm/test_ssm.py::TestSSMDockerVMM::test_send_command",
            "test": "test_send_command",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ec2/test_ec2.py::TestEC2DockerVMM::test_stop_start_terminate_instances_for_invalid_instance_id_raises[terminate_instances]",
            "test": "test_stop_start_terminate_instances_for_invalid_instance_id_raises[terminate_instances]",
            "response": "400",
            "error": "CommonServiceException",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          }
        ]
      }
    }
  }
}