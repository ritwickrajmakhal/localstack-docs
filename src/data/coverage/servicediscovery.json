{
  "service": "servicediscovery",
  "pro_support": true,
  "operations": [
    {
      "CreateHttpNamespace": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "CreatePrivateDnsNamespace": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreatePublicDnsNamespace": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "CreateService": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteNamespace": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteService": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DeleteServiceAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DeregisterInstance": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "DiscoverInstances": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "DiscoverInstancesRevision": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetInstance": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "GetInstancesHealthStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "GetNamespace": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "GetOperation": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "GetService": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "GetServiceAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ListInstances": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ListNamespaces": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ListOperations": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "ListServices": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "ListTagsForResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "RegisterInstance": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": true,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": true
      }
    },
    {
      "TagResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UntagResource": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": true,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateHttpNamespace": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateInstanceCustomHealthStatus": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdatePrivateDnsNamespace": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdatePublicDnsNamespace": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateService": {
        "implemented": true,
        "availability": "pro",
        "internal_test_suite": true,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": true,
        "snapshot_tested": true,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    },
    {
      "UpdateServiceAttributes": {
        "implemented": false,
        "availability": "",
        "internal_test_suite": false,
        "external_test_suite": false,
        "terraform_test_suite": false,
        "aws_validated": false,
        "snapshot_tested": false,
        "snapshot_skipped": "",
        "k8s_test_suite": false
      }
    }
  ],
  "details": {
    "CreateHttpNamespace": {
      "CreatorRequestId, Name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_untagged_resource",
            "test": "test_create_untagged_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CreatorRequestId, Name, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreatePrivateDnsNamespace": {
      "CreatorRequestId, Description, Name, Vpc": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[private-invalid name]",
            "response": "400",
            "error": "InvalidInput",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CreatorRequestId, Name, Vpc": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private_hosted_zone",
            "test": "test_dns_namespace_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreatePublicDnsNamespace": {
      "CreatorRequestId, Description, Name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-invalid name]",
            "test": "test_dns_namespace_with_and_without_dot[public-invalid name]",
            "response": "400",
            "error": "InvalidInput",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-domain-<rnd>]",
            "response": "400",
            "error": "InvalidInput",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CreatorRequestId, Name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_public",
            "test": "test_dns_namespace_public",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_public",
            "test": "test_dns_namespace_public",
            "response": "400",
            "error": "InvalidInput",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "CreateService": {
      "CreatorRequestId, Description, Name, NamespaceId, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CreatorRequestId, DnsConfig, HealthCheckCustomConfig, Name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          }
        ]
      },
      "CreatorRequestId, DnsConfig, Name": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "400",
            "error": "ServiceAlreadyExists",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "CreatorRequestId, DnsConfig, Name, NamespaceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "400",
            "error": "ServiceAlreadyExists",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteNamespace": {
      "Id": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private_hosted_zone",
            "test": "test_dns_namespace_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_public",
            "test": "test_dns_namespace_public",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeleteService": {
      "Id": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DeregisterInstance": {
      "InstanceId, ServiceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "400",
            "error": "InstanceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "400",
            "error": "ServiceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "400",
            "error": "InstanceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "DiscoverInstances": {
      "NamespaceName, OptionalParameters, QueryParameters, ServiceName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "NamespaceName, QueryParameters, ServiceName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "NamespaceName, ServiceName": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "400",
            "error": "NamespaceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetInstance": {
      "InstanceId, ServiceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "400",
            "error": "InstanceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetNamespace": {
      "Id": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_untagged_resource",
            "test": "test_create_untagged_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "400",
            "error": "NamespaceNotFound",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetOperation": {
      "OperationId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_untagged_resource",
            "test": "test_create_untagged_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "GetService": {
      "Id": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service_exceptions",
            "test": "test_create_service_exceptions",
            "response": "400",
            "error": "ServiceNotFound",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.DnsConfig', '$..Service.Type', '$..CreatorRequestId']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "400",
            "error": "ServiceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListInstances": {
      "ServiceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestApigatewayV2PrivateIntegration::test_apigatewayv2_servicediscovery_validation",
            "test": "test_apigatewayv2_servicediscovery_validation",
            "response": "400",
            "error": "ResourceNotFoundException",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          }
        ]
      }
    },
    "ListNamespaces": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private",
            "test": "test_dns_namespace_private",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_public",
            "test": "test_dns_namespace_public",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "MaxResults": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_private_hosted_zone",
            "test": "test_dns_namespace_private_hosted_zone",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "test": "test_dns_namespace_with_and_without_dot[private-test-domain-<rnd>]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "test": "test_dns_namespace_with_and_without_dot[public-test-<rnd>.com]",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListServices": {
      "- (without any parameters)": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      },
      "Filters": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "ListTagsForResource": {
      "ResourceARN": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_untagged_resource",
            "test": "test_create_untagged_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "RegisterInstance": {
      "Attributes, CreatorRequestId, InstanceId, ServiceId": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/apigatewayv2/test_apigatewayv2_private.py::TestHttpApiServiceDiscoveryPrivateIntegration::test_servicediscovery_ecs_integration",
            "test": "test_servicediscovery_ecs_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": false,
            "snapshot_tested": false,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/ecs/test_ecs.py::TestServiceCrud::test_service_discovery_integration",
            "test": "test_service_discovery_integration",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Attributes.AVAILABILITY_ZONE']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "internal"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_filtering_http_namespace",
            "test": "test_filtering_http_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_in_private_dns_namespace",
            "test": "test_register_instance_in_private_dns_namespace",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision', '$..MaxItems']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance_exceptions",
            "test": "test_register_instance_exceptions",
            "response": "400",
            "error": "ServiceNotFound",
            "snapshot_skipped": "['$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "TagResource": {
      "ResourceARN, Tags": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          },
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_untagged_resource",
            "test": "test_create_untagged_resource",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UntagResource": {
      "ResourceARN, TagKeys": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_create_service",
            "test": "test_create_service",
            "response": "200",
            "error": "",
            "snapshot_skipped": "",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    },
    "UpdateService": {
      "Id, Service": {
        "ls_pro": [
          {
            "node_id": "LocalStack Pro: tests/aws/services/servicediscovery/test_servicediscovery.py::TestServicediscovery::test_register_instance",
            "test": "test_register_instance",
            "response": "200",
            "error": "",
            "snapshot_skipped": "['$..Service.CreateDate', '$..Service.Type', '$..Instances..HealthStatus', '$..Instances..NamespaceName', '$..Instances..ServiceName', '$..InstancesRevision']",
            "aws_validated": true,
            "snapshot_tested": true,
            "origin": "external"
          }
        ]
      }
    }
  }
}